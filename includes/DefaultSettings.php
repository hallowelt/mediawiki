<?php
/**
 * Generated stub variables for MediaWiki configuration settings.
 * This exists for the benefit of documentation and IDE integration.
 *
 *
 *                 NEVER EDIT THIS FILE
 *
 *
 * To customize your installation, edit "LocalSettings.php". If you make
 * changes here, they will be lost on next upgrade of MediaWiki!
 *
 * Developers who want to introduce new configuration or change defaults
 * should edit the constants in the MainConfigSchema class.
 * The template for this file itself is DefaultSettings.template.
 *
 * Documentation for each configuration variable can be found in the
 * MainConfigSchema class and on the following page:
 * https://www.mediawiki.org/wiki/Manual:Configuration_settings
 *
 * @file
 */

// phpcs:disable

/**
 * @cond file_level_code
 * This is not a valid entry point, perform no further processing unless
 * MEDIAWIKI is defined
 */
if ( !defined( 'MEDIAWIKI' ) ) {
	echo "This file is part of MediaWiki and is not a valid entry point\n";
	die( 1 );
}

/** @endcond */

/**
 * Variable for the ConfigRegistry setting, for use in LocalSettings.php
 * @see MainConfigSchema::ConfigRegistry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgConfigRegistry = [
	'main' => 'GlobalVarConfig::newInstance',
];

/**
 * Variable for the Sitename setting, for use in LocalSettings.php
 * @see MainConfigSchema::Sitename
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSitename = 'MediaWiki';

/**
 * Variable for the Server setting, for use in LocalSettings.php
 * @see MainConfigSchema::Server
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgServer = false;

/**
 * Variable for the CanonicalServer setting, for use in LocalSettings.php
 * @see MainConfigSchema::CanonicalServer
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCanonicalServer = false;

/**
 * Variable for the ServerName setting, for use in LocalSettings.php
 * @see MainConfigSchema::ServerName
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgServerName = false;

/**
 * Variable for the AssumeProxiesUseDefaultProtocolPorts setting, for use in LocalSettings.php
 * @see MainConfigSchema::AssumeProxiesUseDefaultProtocolPorts
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgAssumeProxiesUseDefaultProtocolPorts = true;

/**
 * Variable for the HttpsPort setting, for use in LocalSettings.php
 * @see MainConfigSchema::HttpsPort
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHttpsPort = 443;

/**
 * Variable for the ForceHTTPS setting, for use in LocalSettings.php
 * @see MainConfigSchema::ForceHTTPS
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgForceHTTPS = false;

/**
 * Variable for the ScriptPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::ScriptPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgScriptPath = '/wiki';

/**
 * Variable for the UsePathInfo setting, for use in LocalSettings.php
 * @see MainConfigSchema::UsePathInfo
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUsePathInfo = null;

/**
 * Variable for the Script setting, for use in LocalSettings.php
 * @see MainConfigSchema::Script
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgScript = false;

/**
 * Variable for the LoadScript setting, for use in LocalSettings.php
 * @see MainConfigSchema::LoadScript
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLoadScript = false;

/**
 * Variable for the RestPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::RestPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRestPath = false;

/**
 * Variable for the StylePath setting, for use in LocalSettings.php
 * @see MainConfigSchema::StylePath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgStylePath = false;

/**
 * Variable for the LocalStylePath setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalStylePath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLocalStylePath = false;

/**
 * Variable for the ExtensionAssetsPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtensionAssetsPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExtensionAssetsPath = false;

/**
 * Variable for the ExtensionDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtensionDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgExtensionDirectory = null;

/**
 * Variable for the StyleDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::StyleDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgStyleDirectory = null;

/**
 * Variable for the BaseDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::BaseDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgBaseDirectory = null;

/**
 * Variable for the ArticlePath setting, for use in LocalSettings.php
 * @see MainConfigSchema::ArticlePath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgArticlePath = false;

/**
 * Variable for the UploadPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadPath = false;

/**
 * Variable for the ImgAuthPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImgAuthPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgImgAuthPath = false;

/**
 * Variable for the ThumbPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::ThumbPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgThumbPath = false;

/**
 * Variable for the UploadDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadDirectory = false;

/**
 * Variable for the FileCacheDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::FileCacheDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFileCacheDirectory = false;

/**
 * Variable for the Logo setting, for use in LocalSettings.php
 * @see MainConfigSchema::Logo
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLogo = false;

/**
 * Variable for the Logos setting, for use in LocalSettings.php
 * @see MainConfigSchema::Logos
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array|bool
 */
$wgLogos = false;

/**
 * Variable for the LogoHD setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogoHD
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.35. Developers should retrieve this logo (and other variants) using
 *    the static function MediaWiki\ResourceLoader\SkinModule::getAvailableLogos.
 *    $wgLogos should be used instead.
 * @var array|bool
 */
$wgLogoHD = false;

/**
 * Variable for the Favicon setting, for use in LocalSettings.php
 * @see MainConfigSchema::Favicon
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFavicon = '/favicon.ico';

/**
 * Variable for the AppleTouchIcon setting, for use in LocalSettings.php
 * @see MainConfigSchema::AppleTouchIcon
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAppleTouchIcon = false;

/**
 * Variable for the ReferrerPolicy setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReferrerPolicy
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array|string|bool
 */
$wgReferrerPolicy = false;

/**
 * Variable for the TmpDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::TmpDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgTmpDirectory = false;

/**
 * Variable for the UploadBaseUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadBaseUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadBaseUrl = '';

/**
 * Variable for the UploadStashScalerBaseUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadStashScalerBaseUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.36 Use thumbProxyUrl in $wgLocalFileRepo
 */
$wgUploadStashScalerBaseUrl = false;

/**
 * Variable for the ActionPaths setting, for use in LocalSettings.php
 * @see MainConfigSchema::ActionPaths
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgActionPaths = [
];

/**
 * Variable for the MainPageIsDomainRoot setting, for use in LocalSettings.php
 * @see MainConfigSchema::MainPageIsDomainRoot
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgMainPageIsDomainRoot = false;

/**
 * Variable for the EnableUploads setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableUploads
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableUploads = false;

/**
 * Variable for the UploadStashMaxAge setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadStashMaxAge
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadStashMaxAge = 21600;

/**
 * Variable for the EnableAsyncUploads setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableAsyncUploads
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableAsyncUploads = false;

/**
 * Variable for the UploadMaintenance setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadMaintenance
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadMaintenance = false;

/**
 * Variable for the IllegalFileChars setting, for use in LocalSettings.php
 * @see MainConfigSchema::IllegalFileChars
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgIllegalFileChars = ':\\/\\\\';

/**
 * Variable for the DeletedDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::DeletedDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDeletedDirectory = false;

/**
 * Variable for the ImgAuthDetails setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImgAuthDetails
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgImgAuthDetails = false;

/**
 * Variable for the ImgAuthUrlPathMap setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImgAuthUrlPathMap
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgImgAuthUrlPathMap = [
];

/**
 * Variable for the LocalFileRepo setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalFileRepo
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array|bool
 */
$wgLocalFileRepo = false;

/**
 * Variable for the ForeignFileRepos setting, for use in LocalSettings.php
 * @see MainConfigSchema::ForeignFileRepos
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgForeignFileRepos = [
];

/**
 * Variable for the UseInstantCommons setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseInstantCommons
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseInstantCommons = false;

/**
 * Variable for the UseSharedUploads setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseSharedUploads
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgUseSharedUploads = false;

/**
 * Variable for the SharedUploadDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedUploadDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgSharedUploadDirectory = null;

/**
 * Variable for the SharedUploadPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedUploadPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgSharedUploadPath = null;

/**
 * Variable for the HashedSharedUploadDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::HashedSharedUploadDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgHashedSharedUploadDirectory = true;

/**
 * Variable for the RepositoryBaseUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::RepositoryBaseUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRepositoryBaseUrl = 'https://commons.wikimedia.org/wiki/File:';

/**
 * Variable for the FetchCommonsDescriptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::FetchCommonsDescriptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgFetchCommonsDescriptions = false;

/**
 * Variable for the SharedUploadDBname setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedUploadDBname
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|string
 */
$wgSharedUploadDBname = false;

/**
 * Variable for the SharedUploadDBprefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedUploadDBprefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string
 */
$wgSharedUploadDBprefix = '';

/**
 * Variable for the CacheSharedUploads setting, for use in LocalSettings.php
 * @see MainConfigSchema::CacheSharedUploads
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgCacheSharedUploads = true;

/**
 * Variable for the ForeignUploadTargets setting, for use in LocalSettings.php
 * @see MainConfigSchema::ForeignUploadTargets
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgForeignUploadTargets = [
	0 => 'local',
];

/**
 * Variable for the UploadDialog setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadDialog
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgUploadDialog = [
	'fields' => [
		'description' => true,
		'date' => false,
		'categories' => false,
	],
	'licensemessages' => [
		'local' => 'generic-local',
		'foreign' => 'generic-foreign',
	],
	'comment' => [
		'local' => '',
		'foreign' => '',
	],
	'format' => [
		'filepage' => '$DESCRIPTION',
		'description' => '$TEXT',
		'ownwork' => '',
		'license' => '',
		'uncategorized' => '',
	],
];

/**
 * Variable for the FileBackends setting, for use in LocalSettings.php
 * @see MainConfigSchema::FileBackends
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgFileBackends = [
];

/**
 * Variable for the LockManagers setting, for use in LocalSettings.php
 * @see MainConfigSchema::LockManagers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLockManagers = [
];

/**
 * Variable for the ShowEXIF setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowEXIF
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowEXIF = null;

/**
 * Variable for the UpdateCompatibleMetadata setting, for use in LocalSettings.php
 * @see MainConfigSchema::UpdateCompatibleMetadata
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUpdateCompatibleMetadata = false;

/**
 * Variable for the AllowCopyUploads setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowCopyUploads
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowCopyUploads = false;

/**
 * Variable for the CopyUploadsDomains setting, for use in LocalSettings.php
 * @see MainConfigSchema::CopyUploadsDomains
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCopyUploadsDomains = [
];

/**
 * Variable for the CopyUploadsFromSpecialUpload setting, for use in LocalSettings.php
 * @see MainConfigSchema::CopyUploadsFromSpecialUpload
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCopyUploadsFromSpecialUpload = false;

/**
 * Variable for the CopyUploadProxy setting, for use in LocalSettings.php
 * @see MainConfigSchema::CopyUploadProxy
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCopyUploadProxy = false;

/**
 * Variable for the CopyUploadTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::CopyUploadTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|int
 */
$wgCopyUploadTimeout = false;

/**
 * Variable for the CopyUploadAllowOnWikiDomainConfig setting, for use in LocalSettings.php
 * @see MainConfigSchema::CopyUploadAllowOnWikiDomainConfig
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCopyUploadAllowOnWikiDomainConfig = false;

/**
 * Variable for the MaxUploadSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxUploadSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxUploadSize = 104857600;

/**
 * Variable for the MinUploadChunkSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::MinUploadChunkSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMinUploadChunkSize = 1024;

/**
 * Variable for the UploadNavigationUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadNavigationUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadNavigationUrl = false;

/**
 * Variable for the UploadMissingFileUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadMissingFileUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadMissingFileUrl = false;

/**
 * Variable for the ThumbnailScriptPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::ThumbnailScriptPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgThumbnailScriptPath = false;

/**
 * Variable for the SharedThumbnailScriptPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedThumbnailScriptPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|bool
 */
$wgSharedThumbnailScriptPath = false;

/**
 * Variable for the HashedUploadDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::HashedUploadDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgHashedUploadDirectory = true;

/**
 * Variable for the FileExtensions setting, for use in LocalSettings.php
 * @see MainConfigSchema::FileExtensions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgFileExtensions = [
	0 => 'png',
	1 => 'gif',
	2 => 'jpg',
	3 => 'jpeg',
	4 => 'webp',
];

/**
 * Variable for the ProhibitedFileExtensions setting, for use in LocalSettings.php
 * @see MainConfigSchema::ProhibitedFileExtensions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgProhibitedFileExtensions = [
	0 => 'html',
	1 => 'htm',
	2 => 'js',
	3 => 'jsb',
	4 => 'mhtml',
	5 => 'mht',
	6 => 'xhtml',
	7 => 'xht',
	8 => 'php',
	9 => 'phtml',
	10 => 'php3',
	11 => 'php4',
	12 => 'php5',
	13 => 'phps',
	14 => 'phar',
	15 => 'shtml',
	16 => 'jhtml',
	17 => 'pl',
	18 => 'py',
	19 => 'cgi',
	20 => 'exe',
	21 => 'scr',
	22 => 'dll',
	23 => 'msi',
	24 => 'vbs',
	25 => 'bat',
	26 => 'com',
	27 => 'pif',
	28 => 'cmd',
	29 => 'vxd',
	30 => 'cpl',
];

/**
 * Variable for the MimeTypeExclusions setting, for use in LocalSettings.php
 * @see MainConfigSchema::MimeTypeExclusions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgMimeTypeExclusions = [
	0 => 'text/html',
	1 => 'application/javascript',
	2 => 'text/javascript',
	3 => 'text/x-javascript',
	4 => 'application/x-shellscript',
	5 => 'application/x-php',
	6 => 'text/x-php',
	7 => 'text/x-python',
	8 => 'text/x-perl',
	9 => 'text/x-bash',
	10 => 'text/x-sh',
	11 => 'text/x-csh',
	12 => 'text/scriptlet',
	13 => 'application/x-msdownload',
	14 => 'application/x-msmetafile',
	15 => 'application/java',
];

/**
 * Variable for the CheckFileExtensions setting, for use in LocalSettings.php
 * @see MainConfigSchema::CheckFileExtensions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCheckFileExtensions = true;

/**
 * Variable for the StrictFileExtensions setting, for use in LocalSettings.php
 * @see MainConfigSchema::StrictFileExtensions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgStrictFileExtensions = true;

/**
 * Variable for the DisableUploadScriptChecks setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableUploadScriptChecks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableUploadScriptChecks = false;

/**
 * Variable for the UploadSizeWarning setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadSizeWarning
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadSizeWarning = false;

/**
 * Variable for the TrustedMediaFormats setting, for use in LocalSettings.php
 * @see MainConfigSchema::TrustedMediaFormats
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgTrustedMediaFormats = [
	0 => 'BITMAP',
	1 => 'AUDIO',
	2 => 'VIDEO',
	3 => 'image/svg+xml',
	4 => 'application/pdf',
];

/**
 * Variable for the MediaHandlers setting, for use in LocalSettings.php
 * @see MainConfigSchema::MediaHandlers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgMediaHandlers = [
];

/**
 * Variable for the NativeImageLazyLoading setting, for use in LocalSettings.php
 * @see MainConfigSchema::NativeImageLazyLoading
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgNativeImageLazyLoading = false;

/**
 * Variable for the ParserTestMediaHandlers setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParserTestMediaHandlers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgParserTestMediaHandlers = [
	'image/jpeg' => 'MockBitmapHandler',
	'image/png' => 'MockBitmapHandler',
	'image/gif' => 'MockBitmapHandler',
	'image/tiff' => 'MockBitmapHandler',
	'image/webp' => 'MockBitmapHandler',
	'image/x-ms-bmp' => 'MockBitmapHandler',
	'image/x-bmp' => 'MockBitmapHandler',
	'image/x-xcf' => 'MockBitmapHandler',
	'image/svg+xml' => 'MockSvgHandler',
	'image/vnd.djvu' => 'MockDjVuHandler',
];

/**
 * Variable for the UseImageResize setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseImageResize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseImageResize = true;

/**
 * Variable for the UseImageMagick setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseImageMagick
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseImageMagick = false;

/**
 * Variable for the ImageMagickConvertCommand setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImageMagickConvertCommand
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgImageMagickConvertCommand = '/usr/bin/convert';

/**
 * Variable for the MaxInterlacingAreas setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxInterlacingAreas
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgMaxInterlacingAreas = [
];

/**
 * Variable for the SharpenParameter setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharpenParameter
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSharpenParameter = '0x0.4';

/**
 * Variable for the SharpenReductionThreshold setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharpenReductionThreshold
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSharpenReductionThreshold = 0.85;

/**
 * Variable for the ImageMagickTempDir setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImageMagickTempDir
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgImageMagickTempDir = false;

/**
 * Variable for the CustomConvertCommand setting, for use in LocalSettings.php
 * @see MainConfigSchema::CustomConvertCommand
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCustomConvertCommand = false;

/**
 * Variable for the JpegTran setting, for use in LocalSettings.php
 * @see MainConfigSchema::JpegTran
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgJpegTran = '/usr/bin/jpegtran';

/**
 * Variable for the JpegPixelFormat setting, for use in LocalSettings.php
 * @see MainConfigSchema::JpegPixelFormat
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgJpegPixelFormat = 'yuv420';

/**
 * Variable for the JpegQuality setting, for use in LocalSettings.php
 * @see MainConfigSchema::JpegQuality
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgJpegQuality = 80;

/**
 * Variable for the Exiv2Command setting, for use in LocalSettings.php
 * @see MainConfigSchema::Exiv2Command
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExiv2Command = '/usr/bin/exiv2';

/**
 * Variable for the Exiftool setting, for use in LocalSettings.php
 * @see MainConfigSchema::Exiftool
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExiftool = '/usr/bin/exiftool';

/**
 * Variable for the SVGConverters setting, for use in LocalSettings.php
 * @see MainConfigSchema::SVGConverters
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSVGConverters = [
	'ImageMagick' => '$path/convert -background "#ffffff00" -thumbnail $widthx$height\\! $input PNG:$output',
	'sodipodi' => '$path/sodipodi -z -w $width -f $input -e $output',
	'inkscape' => '$path/inkscape -z -w $width -f $input -e $output',
	'batik' => 'java -Djava.awt.headless=true -jar $path/batik-rasterizer.jar -w $width -d $output $input',
	'rsvg' => '$path/rsvg-convert -w $width -h $height -o $output $input',
	'imgserv' => '$path/imgserv-wrapper -i svg -o png -w$width $input $output',
	'ImagickExt' => [
		0 => 'SvgHandler::rasterizeImagickExt',
	],
];

/**
 * Variable for the SVGConverter setting, for use in LocalSettings.php
 * @see MainConfigSchema::SVGConverter
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSVGConverter = 'ImageMagick';

/**
 * Variable for the SVGConverterPath setting, for use in LocalSettings.php
 * @see MainConfigSchema::SVGConverterPath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSVGConverterPath = '';

/**
 * Variable for the SVGMaxSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::SVGMaxSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSVGMaxSize = 5120;

/**
 * Variable for the SVGMetadataCutoff setting, for use in LocalSettings.php
 * @see MainConfigSchema::SVGMetadataCutoff
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSVGMetadataCutoff = 262144;

/**
 * Variable for the MediaInTargetLanguage setting, for use in LocalSettings.php
 * @see MainConfigSchema::MediaInTargetLanguage
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMediaInTargetLanguage = true;

/**
 * Variable for the MaxImageArea setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxImageArea
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|int|bool
 */
$wgMaxImageArea = 12500000;

/**
 * Variable for the MaxAnimatedGifArea setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxAnimatedGifArea
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxAnimatedGifArea = 12500000;

/**
 * Variable for the TiffThumbnailType setting, for use in LocalSettings.php
 * @see MainConfigSchema::TiffThumbnailType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgTiffThumbnailType = [
];

/**
 * Variable for the ThumbnailEpoch setting, for use in LocalSettings.php
 * @see MainConfigSchema::ThumbnailEpoch
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgThumbnailEpoch = '20030516000000';

/**
 * Variable for the AttemptFailureEpoch setting, for use in LocalSettings.php
 * @see MainConfigSchema::AttemptFailureEpoch
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAttemptFailureEpoch = 1;

/**
 * Variable for the IgnoreImageErrors setting, for use in LocalSettings.php
 * @see MainConfigSchema::IgnoreImageErrors
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgIgnoreImageErrors = false;

/**
 * Variable for the GenerateThumbnailOnParse setting, for use in LocalSettings.php
 * @see MainConfigSchema::GenerateThumbnailOnParse
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgGenerateThumbnailOnParse = true;

/**
 * Variable for the ShowArchiveThumbnails setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowArchiveThumbnails
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowArchiveThumbnails = true;

/**
 * Variable for the EnableAutoRotation setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableAutoRotation
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?bool
 */
$wgEnableAutoRotation = null;

/**
 * Variable for the Antivirus setting, for use in LocalSettings.php
 * @see MainConfigSchema::Antivirus
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgAntivirus = null;

/**
 * Variable for the AntivirusSetup setting, for use in LocalSettings.php
 * @see MainConfigSchema::AntivirusSetup
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAntivirusSetup = [
	'clamav' => [
		'command' => 'clamscan --no-summary ',
		'codemap' => [
			0 => 0,
			1 => 1,
			52 => -1,
			'*' => false,
		],
		'messagepattern' => '/.*?:(.*)/sim',
	],
];

/**
 * Variable for the AntivirusRequired setting, for use in LocalSettings.php
 * @see MainConfigSchema::AntivirusRequired
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAntivirusRequired = true;

/**
 * Variable for the VerifyMimeType setting, for use in LocalSettings.php
 * @see MainConfigSchema::VerifyMimeType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgVerifyMimeType = true;

/**
 * Variable for the VerifyMimeTypeIE setting, for use in LocalSettings.php
 * @see MainConfigSchema::VerifyMimeTypeIE
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgVerifyMimeTypeIE = true;

/**
 * Variable for the MimeTypeFile setting, for use in LocalSettings.php
 * @see MainConfigSchema::MimeTypeFile
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMimeTypeFile = 'internal';

/**
 * Variable for the MimeInfoFile setting, for use in LocalSettings.php
 * @see MainConfigSchema::MimeInfoFile
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMimeInfoFile = 'internal';

/**
 * Variable for the MimeDetectorCommand setting, for use in LocalSettings.php
 * @see MainConfigSchema::MimeDetectorCommand
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgMimeDetectorCommand = null;

/**
 * Variable for the TrivialMimeDetection setting, for use in LocalSettings.php
 * @see MainConfigSchema::TrivialMimeDetection
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgTrivialMimeDetection = false;

/**
 * Variable for the XMLMimeTypes setting, for use in LocalSettings.php
 * @see MainConfigSchema::XMLMimeTypes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgXMLMimeTypes = [
	'http://www.w3.org/2000/svg:svg' => 'image/svg+xml',
	'svg' => 'image/svg+xml',
	'http://www.lysator.liu.se/~alla/dia/:diagram' => 'application/x-dia-diagram',
	'http://www.w3.org/1999/xhtml:html' => 'text/html',
	'html' => 'text/html',
];

/**
 * Variable for the ImageLimits setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImageLimits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgImageLimits = [
	0 => [
		0 => 320,
		1 => 240,
	],
	1 => [
		0 => 640,
		1 => 480,
	],
	2 => [
		0 => 800,
		1 => 600,
	],
	3 => [
		0 => 1024,
		1 => 768,
	],
	4 => [
		0 => 1280,
		1 => 1024,
	],
	5 => [
		0 => 2560,
		1 => 2048,
	],
];

/**
 * Variable for the ThumbLimits setting, for use in LocalSettings.php
 * @see MainConfigSchema::ThumbLimits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgThumbLimits = [
	0 => 120,
	1 => 150,
	2 => 180,
	3 => 200,
	4 => 250,
	5 => 300,
];

/**
 * Variable for the ThumbnailBuckets setting, for use in LocalSettings.php
 * @see MainConfigSchema::ThumbnailBuckets
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?array
 */
$wgThumbnailBuckets = null;

/**
 * Variable for the ThumbnailMinimumBucketDistance setting, for use in LocalSettings.php
 * @see MainConfigSchema::ThumbnailMinimumBucketDistance
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgThumbnailMinimumBucketDistance = 50;

/**
 * Variable for the UploadThumbnailRenderMap setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadThumbnailRenderMap
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgUploadThumbnailRenderMap = [
];

/**
 * Variable for the UploadThumbnailRenderMethod setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadThumbnailRenderMethod
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadThumbnailRenderMethod = 'jobqueue';

/**
 * Variable for the UploadThumbnailRenderHttpCustomHost setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadThumbnailRenderHttpCustomHost
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadThumbnailRenderHttpCustomHost = false;

/**
 * Variable for the UploadThumbnailRenderHttpCustomDomain setting, for use in LocalSettings.php
 * @see MainConfigSchema::UploadThumbnailRenderHttpCustomDomain
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUploadThumbnailRenderHttpCustomDomain = false;

/**
 * Variable for the UseTinyRGBForJPGThumbnails setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseTinyRGBForJPGThumbnails
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseTinyRGBForJPGThumbnails = false;

/**
 * Variable for the GalleryOptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::GalleryOptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGalleryOptions = [
];

/**
 * Variable for the ThumbUpright setting, for use in LocalSettings.php
 * @see MainConfigSchema::ThumbUpright
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgThumbUpright = 0.75;

/**
 * Variable for the DirectoryMode setting, for use in LocalSettings.php
 * @see MainConfigSchema::DirectoryMode
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDirectoryMode = 511;

/**
 * Variable for the ResponsiveImages setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResponsiveImages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResponsiveImages = true;

/**
 * Variable for the ImagePreconnect setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImagePreconnect
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgImagePreconnect = false;

/**
 * Variable for the DjvuDump setting, for use in LocalSettings.php
 * @see MainConfigSchema::DjvuDump
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgDjvuDump = null;

/**
 * Variable for the DjvuRenderer setting, for use in LocalSettings.php
 * @see MainConfigSchema::DjvuRenderer
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgDjvuRenderer = null;

/**
 * Variable for the DjvuTxt setting, for use in LocalSettings.php
 * @see MainConfigSchema::DjvuTxt
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgDjvuTxt = null;

/**
 * Variable for the DjvuPostProcessor setting, for use in LocalSettings.php
 * @see MainConfigSchema::DjvuPostProcessor
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgDjvuPostProcessor = 'pnmtojpeg';

/**
 * Variable for the DjvuOutputExtension setting, for use in LocalSettings.php
 * @see MainConfigSchema::DjvuOutputExtension
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDjvuOutputExtension = 'jpg';

/**
 * Variable for the EmergencyContact setting, for use in LocalSettings.php
 * @see MainConfigSchema::EmergencyContact
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEmergencyContact = false;

/**
 * Variable for the PasswordSender setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordSender
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPasswordSender = false;

/**
 * Variable for the NoReplyAddress setting, for use in LocalSettings.php
 * @see MainConfigSchema::NoReplyAddress
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgNoReplyAddress = false;

/**
 * Variable for the EnableEmail setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableEmail
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableEmail = true;

/**
 * Variable for the EnableUserEmail setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableUserEmail
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableUserEmail = true;

/**
 * Variable for the EnableSpecialMute setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableSpecialMute
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.34
 */
$wgEnableSpecialMute = false;

/**
 * Variable for the EnableUserEmailMuteList setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableUserEmailMuteList
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableUserEmailMuteList = false;

/**
 * Variable for the UserEmailUseReplyTo setting, for use in LocalSettings.php
 * @see MainConfigSchema::UserEmailUseReplyTo
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUserEmailUseReplyTo = true;

/**
 * Variable for the PasswordReminderResendTime setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordReminderResendTime
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPasswordReminderResendTime = 24;

/**
 * Variable for the NewPasswordExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::NewPasswordExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgNewPasswordExpiry = 604800;

/**
 * Variable for the UserEmailConfirmationTokenExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::UserEmailConfirmationTokenExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUserEmailConfirmationTokenExpiry = 604800;

/**
 * Variable for the PasswordExpirationDays setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordExpirationDays
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPasswordExpirationDays = false;

/**
 * Variable for the PasswordExpireGrace setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordExpireGrace
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPasswordExpireGrace = 604800;

/**
 * Variable for the SMTP setting, for use in LocalSettings.php
 * @see MainConfigSchema::SMTP
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|array
 */
$wgSMTP = false;

/**
 * Variable for the AdditionalMailParams setting, for use in LocalSettings.php
 * @see MainConfigSchema::AdditionalMailParams
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAdditionalMailParams = null;

/**
 * Variable for the AllowHTMLEmail setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowHTMLEmail
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowHTMLEmail = false;

/**
 * Variable for the EnotifFromEditor setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifFromEditor
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgEnotifFromEditor = false;

/**
 * Variable for the EmailAuthentication setting, for use in LocalSettings.php
 * @see MainConfigSchema::EmailAuthentication
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEmailAuthentication = true;

/**
 * Variable for the EnotifWatchlist setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifWatchlist
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnotifWatchlist = false;

/**
 * Variable for the EnotifUserTalk setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifUserTalk
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnotifUserTalk = false;

/**
 * Variable for the EnotifRevealEditorAddress setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifRevealEditorAddress
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgEnotifRevealEditorAddress = false;

/**
 * Variable for the EnotifMinorEdits setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifMinorEdits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnotifMinorEdits = true;

/**
 * Variable for the EnotifImpersonal setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifImpersonal
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnotifImpersonal = false;

/**
 * Variable for the EnotifMaxRecips setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifMaxRecips
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnotifMaxRecips = 500;

/**
 * Variable for the EnotifUseRealName setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnotifUseRealName
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnotifUseRealName = false;

/**
 * Variable for the UsersNotifiedOnAllChanges setting, for use in LocalSettings.php
 * @see MainConfigSchema::UsersNotifiedOnAllChanges
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgUsersNotifiedOnAllChanges = [
];

/**
 * Variable for the DBname setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBname
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBname = 'my_wiki';

/**
 * Variable for the DBmwschema setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBmwschema
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgDBmwschema = null;

/**
 * Variable for the DBprefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBprefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBprefix = '';

/**
 * Variable for the DBserver setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBserver
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBserver = 'localhost';

/**
 * Variable for the DBport setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBport
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBport = 5432;

/**
 * Variable for the DBuser setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBuser
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBuser = 'wikiuser';

/**
 * Variable for the DBpassword setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBpassword
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBpassword = '';

/**
 * Variable for the DBtype setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBtype
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBtype = 'mysql';

/**
 * Variable for the DBssl setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBssl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBssl = false;

/**
 * Variable for the DBcompress setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBcompress
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBcompress = false;

/**
 * Variable for the DBadminuser setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBadminuser
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBadminuser = null;

/**
 * Variable for the DBadminpassword setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBadminpassword
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBadminpassword = null;

/**
 * Variable for the SearchType setting, for use in LocalSettings.php
 * @see MainConfigSchema::SearchType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSearchType = null;

/**
 * Variable for the SearchTypeAlternatives setting, for use in LocalSettings.php
 * @see MainConfigSchema::SearchTypeAlternatives
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSearchTypeAlternatives = null;

/**
 * Variable for the DBTableOptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBTableOptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBTableOptions = 'ENGINE=InnoDB, DEFAULT CHARSET=binary';

/**
 * Variable for the SQLMode setting, for use in LocalSettings.php
 * @see MainConfigSchema::SQLMode
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSQLMode = '';

/**
 * Variable for the DBDefaultGroup setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBDefaultGroup
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBDefaultGroup = null;

/**
 * Variable for the SQLiteDataDir setting, for use in LocalSettings.php
 * @see MainConfigSchema::SQLiteDataDir
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSQLiteDataDir = '';

/**
 * Variable for the SharedDB setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedDB
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.21 In new code, use the $wiki parameter to LBFactory::getMainLB()
 *    to access remote databases. Using LBFactory::getMainLB() allows the shared
 *    database to reside on separate servers to the wiki's own database, with
 *    suitable configuration of $wgLBFactoryConf
 */
$wgSharedDB = null;

/**
 * Variable for the SharedPrefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedPrefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSharedPrefix = false;

/**
 * Variable for the SharedTables setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedTables
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSharedTables = [
	0 => 'user',
	1 => 'user_properties',
	2 => 'user_autocreate_serial',
];

/**
 * Variable for the SharedSchema setting, for use in LocalSettings.php
 * @see MainConfigSchema::SharedSchema
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSharedSchema = false;

/**
 * Variable for the DBservers setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBservers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|array
 */
$wgDBservers = false;

/**
 * Variable for the LBFactoryConf setting, for use in LocalSettings.php
 * @see MainConfigSchema::LBFactoryConf
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLBFactoryConf = [
	'class' => 'Wikimedia\\Rdbms\\LBFactorySimple',
];

/**
 * Variable for the DataCenterUpdateStickTTL setting, for use in LocalSettings.php
 * @see MainConfigSchema::DataCenterUpdateStickTTL
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDataCenterUpdateStickTTL = 10;

/**
 * Variable for the DBerrorLog setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBerrorLog
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBerrorLog = false;

/**
 * Variable for the DBerrorLogTZ setting, for use in LocalSettings.php
 * @see MainConfigSchema::DBerrorLogTZ
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDBerrorLogTZ = false;

/**
 * Variable for the LocalDatabases setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalDatabases
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLocalDatabases = [
];

/**
 * Variable for the DatabaseReplicaLagWarning setting, for use in LocalSettings.php
 * @see MainConfigSchema::DatabaseReplicaLagWarning
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDatabaseReplicaLagWarning = 10;

/**
 * Variable for the DatabaseReplicaLagCritical setting, for use in LocalSettings.php
 * @see MainConfigSchema::DatabaseReplicaLagCritical
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDatabaseReplicaLagCritical = 30;

/**
 * Variable for the MaxExecutionTimeForExpensiveQueries setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxExecutionTimeForExpensiveQueries
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxExecutionTimeForExpensiveQueries = 0;

/**
 * Variable for the ActorTableSchemaMigrationStage setting, for use in LocalSettings.php
 * @see MainConfigSchema::ActorTableSchemaMigrationStage
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int
 */
$wgActorTableSchemaMigrationStage = 48;

/**
 * Variable for the TemplateLinksSchemaMigrationStage setting, for use in LocalSettings.php
 * @see MainConfigSchema::TemplateLinksSchemaMigrationStage
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int
 */
$wgTemplateLinksSchemaMigrationStage = 3;

/**
 * Variable for the ContentHandlers setting, for use in LocalSettings.php
 * @see MainConfigSchema::ContentHandlers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgContentHandlers = [
	'wikitext' => 'WikitextContentHandler',
	'javascript' => 'JavaScriptContentHandler',
	'json' => 'JsonContentHandler',
	'css' => 'CssContentHandler',
	'text' => 'TextContentHandler',
	'unknown' => 'FallbackContentHandler',
];

/**
 * Variable for the NamespaceContentModels setting, for use in LocalSettings.php
 * @see MainConfigSchema::NamespaceContentModels
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNamespaceContentModels = [
];

/**
 * Variable for the ContentHandlerTextFallback setting, for use in LocalSettings.php
 * @see MainConfigSchema::ContentHandlerTextFallback
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.37
 */
$wgContentHandlerTextFallback = 'ignore';

/**
 * Variable for the TextModelsToParse setting, for use in LocalSettings.php
 * @see MainConfigSchema::TextModelsToParse
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgTextModelsToParse = [
	0 => 'wikitext',
	1 => 'javascript',
	2 => 'css',
];

/**
 * Variable for the CompressRevisions setting, for use in LocalSettings.php
 * @see MainConfigSchema::CompressRevisions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCompressRevisions = false;

/**
 * Variable for the ExternalStores setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExternalStores
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExternalStores = [
];

/**
 * Variable for the ExternalServers setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExternalServers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExternalServers = [
];

/**
 * Variable for the DefaultExternalStore setting, for use in LocalSettings.php
 * @see MainConfigSchema::DefaultExternalStore
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array|bool
 */
$wgDefaultExternalStore = false;

/**
 * Variable for the RevisionCacheExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::RevisionCacheExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int
 */
$wgRevisionCacheExpiry = 604800;

/**
 * Variable for the PageLanguageUseDB setting, for use in LocalSettings.php
 * @see MainConfigSchema::PageLanguageUseDB
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgPageLanguageUseDB = false;

/**
 * Variable for the DiffEngine setting, for use in LocalSettings.php
 * @see MainConfigSchema::DiffEngine
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgDiffEngine = null;

/**
 * Variable for the ExternalDiffEngine setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExternalDiffEngine
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|bool
 */
$wgExternalDiffEngine = false;

/**
 * Variable for the RequestTimeLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::RequestTimeLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?int
 */
$wgRequestTimeLimit = null;

/**
 * Variable for the TransactionalTimeLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::TransactionalTimeLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgTransactionalTimeLimit = 120;

/**
 * Variable for the CriticalSectionTimeLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::CriticalSectionTimeLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float
 */
$wgCriticalSectionTimeLimit = 180.0;

/**
 * Variable for the MiserMode setting, for use in LocalSettings.php
 * @see MainConfigSchema::MiserMode
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMiserMode = false;

/**
 * Variable for the DisableQueryPages setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableQueryPages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableQueryPages = false;

/**
 * Variable for the QueryCacheLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::QueryCacheLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgQueryCacheLimit = 1000;

/**
 * Variable for the WantedPagesThreshold setting, for use in LocalSettings.php
 * @see MainConfigSchema::WantedPagesThreshold
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgWantedPagesThreshold = 1;

/**
 * Variable for the AllowSlowParserFunctions setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowSlowParserFunctions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowSlowParserFunctions = false;

/**
 * Variable for the AllowSchemaUpdates setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowSchemaUpdates
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowSchemaUpdates = true;

/**
 * Variable for the MaxArticleSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxArticleSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxArticleSize = 2048;

/**
 * Variable for the MemoryLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::MemoryLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMemoryLimit = '50M';

/**
 * Variable for the PoolCounterConf setting, for use in LocalSettings.php
 * @see MainConfigSchema::PoolCounterConf
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?array
 */
$wgPoolCounterConf = null;

/**
 * Variable for the MaxUserDBWriteDuration setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxUserDBWriteDuration
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int|bool
 */
$wgMaxUserDBWriteDuration = false;

/**
 * Variable for the MaxJobDBWriteDuration setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxJobDBWriteDuration
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int|bool
 */
$wgMaxJobDBWriteDuration = false;

/**
 * Variable for the LinkHolderBatchSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::LinkHolderBatchSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLinkHolderBatchSize = 1000;

/**
 * Variable for the MaximumMovedPages setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaximumMovedPages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaximumMovedPages = 100;

/**
 * Variable for the ForceDeferredUpdatesPreSend setting, for use in LocalSettings.php
 * @see MainConfigSchema::ForceDeferredUpdatesPreSend
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgForceDeferredUpdatesPreSend = false;

/**
 * Variable for the CacheDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::CacheDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCacheDirectory = false;

/**
 * Variable for the MainCacheType setting, for use in LocalSettings.php
 * @see MainConfigSchema::MainCacheType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMainCacheType = 0;

/**
 * Variable for the MessageCacheType setting, for use in LocalSettings.php
 * @see MainConfigSchema::MessageCacheType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMessageCacheType = -1;

/**
 * Variable for the ParserCacheType setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParserCacheType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgParserCacheType = -1;

/**
 * Variable for the SessionCacheType setting, for use in LocalSettings.php
 * @see MainConfigSchema::SessionCacheType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSessionCacheType = -1;

/**
 * Variable for the LanguageConverterCacheType setting, for use in LocalSettings.php
 * @see MainConfigSchema::LanguageConverterCacheType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLanguageConverterCacheType = -1;

/**
 * Variable for the ObjectCaches setting, for use in LocalSettings.php
 * @see MainConfigSchema::ObjectCaches
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgObjectCaches = [
	0 => [
		'class' => 'EmptyBagOStuff',
		'reportDupes' => false,
	],
	1 => [
		'class' => 'SqlBagOStuff',
		'loggroup' => 'SQLBagOStuff',
	],
	-1 => [
		'factory' => 'ObjectCache::newAnything',
	],
	3 => [
		'factory' => 'ObjectCache::getLocalServerInstance',
	],
	'db-replicated' => [
		'class' => 'ReplicatedBagOStuff',
		'readFactory' => [
			'factory' => 'ObjectCache::newFromParams',
			'args' => [
				0 => [
					'class' => 'SqlBagOStuff',
					'replicaOnly' => true,
				],
			],
		],
		'writeFactory' => [
			'factory' => 'ObjectCache::newFromParams',
			'args' => [
				0 => [
					'class' => 'SqlBagOStuff',
					'replicaOnly' => false,
				],
			],
		],
		'loggroup' => 'SQLBagOStuff',
		'reportDupes' => false,
	],
	'memcached-php' => [
		'class' => 'MemcachedPhpBagOStuff',
		'loggroup' => 'memcached',
	],
	'memcached-pecl' => [
		'class' => 'MemcachedPeclBagOStuff',
		'loggroup' => 'memcached',
	],
	'hash' => [
		'class' => 'HashBagOStuff',
		'reportDupes' => false,
	],
	'apc' => [
		'class' => 'APCUBagOStuff',
		'reportDupes' => false,
	],
	'apcu' => [
		'class' => 'APCUBagOStuff',
		'reportDupes' => false,
	],
	'wincache' => [
		'class' => 'WinCacheBagOStuff',
		'reportDupes' => false,
	],
];

/**
 * Variable for the MainWANCache setting, for use in LocalSettings.php
 * @see MainConfigSchema::MainWANCache
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int|string|bool
 */
$wgMainWANCache = false;

/**
 * Variable for the WANObjectCaches setting, for use in LocalSettings.php
 * @see MainConfigSchema::WANObjectCaches
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgWANObjectCaches = [
	0 => [
		'class' => 'WANObjectCache',
		'cacheId' => 0,
	],
];

/**
 * Variable for the EnableWANCacheReaper setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableWANCacheReaper
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgEnableWANCacheReaper = false;

/**
 * Variable for the MainStash setting, for use in LocalSettings.php
 * @see MainConfigSchema::MainStash
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMainStash = 'db-replicated';

/**
 * Variable for the ChronologyProtectorStash setting, for use in LocalSettings.php
 * @see MainConfigSchema::ChronologyProtectorStash
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgChronologyProtectorStash = null;

/**
 * Variable for the ParserCacheExpireTime setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParserCacheExpireTime
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgParserCacheExpireTime = 86400;

/**
 * Variable for the OldRevisionParserCacheExpireTime setting, for use in LocalSettings.php
 * @see MainConfigSchema::OldRevisionParserCacheExpireTime
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgOldRevisionParserCacheExpireTime = 3600;

/**
 * Variable for the ObjectCacheSessionExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::ObjectCacheSessionExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgObjectCacheSessionExpiry = 3600;

/**
 * Variable for the PHPSessionHandling setting, for use in LocalSettings.php
 * @see MainConfigSchema::PHPSessionHandling
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string
 */
$wgPHPSessionHandling = 'enable';

/**
 * Variable for the SuspiciousIpExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::SuspiciousIpExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int|bool
 */
$wgSuspiciousIpExpiry = false;

/**
 * Variable for the SessionPbkdf2Iterations setting, for use in LocalSettings.php
 * @see MainConfigSchema::SessionPbkdf2Iterations
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSessionPbkdf2Iterations = 10001;

/**
 * Variable for the MemCachedServers setting, for use in LocalSettings.php
 * @see MainConfigSchema::MemCachedServers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgMemCachedServers = [
	0 => '127.0.0.1:11211',
];

/**
 * Variable for the MemCachedPersistent setting, for use in LocalSettings.php
 * @see MainConfigSchema::MemCachedPersistent
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMemCachedPersistent = false;

/**
 * Variable for the MemCachedTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::MemCachedTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMemCachedTimeout = 500000;

/**
 * Variable for the UseLocalMessageCache setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseLocalMessageCache
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseLocalMessageCache = false;

/**
 * Variable for the AdaptiveMessageCache setting, for use in LocalSettings.php
 * @see MainConfigSchema::AdaptiveMessageCache
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAdaptiveMessageCache = false;

/**
 * Variable for the LocalisationCacheConf setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalisationCacheConf
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLocalisationCacheConf = [
	'class' => 'LocalisationCache',
	'store' => 'detect',
	'storeClass' => false,
	'storeDirectory' => false,
	'storeServer' => [
	],
	'forceRecache' => false,
	'manualRecache' => false,
];

/**
 * Variable for the CachePages setting, for use in LocalSettings.php
 * @see MainConfigSchema::CachePages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCachePages = true;

/**
 * Variable for the CacheEpoch setting, for use in LocalSettings.php
 * @see MainConfigSchema::CacheEpoch
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCacheEpoch = '20030516000000';

/**
 * Variable for the GitInfoCacheDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::GitInfoCacheDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgGitInfoCacheDirectory = false;

/**
 * Variable for the UseFileCache setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseFileCache
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseFileCache = false;

/**
 * Variable for the FileCacheDepth setting, for use in LocalSettings.php
 * @see MainConfigSchema::FileCacheDepth
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFileCacheDepth = 2;

/**
 * Variable for the RenderHashAppend setting, for use in LocalSettings.php
 * @see MainConfigSchema::RenderHashAppend
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRenderHashAppend = '';

/**
 * Variable for the EnableSidebarCache setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableSidebarCache
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableSidebarCache = false;

/**
 * Variable for the SidebarCacheExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::SidebarCacheExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSidebarCacheExpiry = 86400;

/**
 * Variable for the FooterLinkCacheExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::FooterLinkCacheExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFooterLinkCacheExpiry = 0;

/**
 * Variable for the UseGzip setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseGzip
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseGzip = false;

/**
 * Variable for the InvalidateCacheOnLocalSettingsChange setting, for use in LocalSettings.php
 * @see MainConfigSchema::InvalidateCacheOnLocalSettingsChange
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInvalidateCacheOnLocalSettingsChange = true;

/**
 * Variable for the ExtensionInfoMTime setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtensionInfoMTime
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int|bool
 */
$wgExtensionInfoMTime = false;

/**
 * Variable for the ParserCacheUseJson setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParserCacheUseJson
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.36
 */
$wgParserCacheUseJson = true;

/**
 * Variable for the EnableRemoteBagOStuffTests setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableRemoteBagOStuffTests
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableRemoteBagOStuffTests = false;

/**
 * Variable for the UseCdn setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseCdn
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseCdn = false;

/**
 * Variable for the VaryOnXFP setting, for use in LocalSettings.php
 * @see MainConfigSchema::VaryOnXFP
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgVaryOnXFP = false;

/**
 * Variable for the InternalServer setting, for use in LocalSettings.php
 * @see MainConfigSchema::InternalServer
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInternalServer = false;

/**
 * Variable for the CdnMaxAge setting, for use in LocalSettings.php
 * @see MainConfigSchema::CdnMaxAge
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCdnMaxAge = 18000;

/**
 * Variable for the CdnMaxageLagged setting, for use in LocalSettings.php
 * @see MainConfigSchema::CdnMaxageLagged
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCdnMaxageLagged = 30;

/**
 * Variable for the CdnMaxageStale setting, for use in LocalSettings.php
 * @see MainConfigSchema::CdnMaxageStale
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCdnMaxageStale = 10;

/**
 * Variable for the CdnReboundPurgeDelay setting, for use in LocalSettings.php
 * @see MainConfigSchema::CdnReboundPurgeDelay
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCdnReboundPurgeDelay = 0;

/**
 * Variable for the CdnMaxageSubstitute setting, for use in LocalSettings.php
 * @see MainConfigSchema::CdnMaxageSubstitute
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCdnMaxageSubstitute = 60;

/**
 * Variable for the ForcedRawSMaxage setting, for use in LocalSettings.php
 * @see MainConfigSchema::ForcedRawSMaxage
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgForcedRawSMaxage = 300;

/**
 * Variable for the CdnServers setting, for use in LocalSettings.php
 * @see MainConfigSchema::CdnServers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCdnServers = [
];

/**
 * Variable for the CdnServersNoPurge setting, for use in LocalSettings.php
 * @see MainConfigSchema::CdnServersNoPurge
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCdnServersNoPurge = [
];

/**
 * Variable for the SquidPurgeUseHostHeader setting, for use in LocalSettings.php
 * @see MainConfigSchema::SquidPurgeUseHostHeader
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.33
 */
$wgSquidPurgeUseHostHeader = true;

/**
 * Variable for the HTCPRouting setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTCPRouting
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgHTCPRouting = [
];

/**
 * Variable for the HTCPMulticastTTL setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTCPMulticastTTL
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHTCPMulticastTTL = 1;

/**
 * Variable for the UsePrivateIPs setting, for use in LocalSettings.php
 * @see MainConfigSchema::UsePrivateIPs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUsePrivateIPs = false;

/**
 * Variable for the LanguageCode setting, for use in LocalSettings.php
 * @see MainConfigSchema::LanguageCode
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLanguageCode = 'en';

/**
 * Variable for the GrammarForms setting, for use in LocalSettings.php
 * @see MainConfigSchema::GrammarForms
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGrammarForms = [
];

/**
 * Variable for the InterwikiMagic setting, for use in LocalSettings.php
 * @see MainConfigSchema::InterwikiMagic
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInterwikiMagic = true;

/**
 * Variable for the HideInterlanguageLinks setting, for use in LocalSettings.php
 * @see MainConfigSchema::HideInterlanguageLinks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHideInterlanguageLinks = false;

/**
 * Variable for the ExtraInterlanguageLinkPrefixes setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtraInterlanguageLinkPrefixes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtraInterlanguageLinkPrefixes = [
];

/**
 * Variable for the InterlanguageLinkCodeMap setting, for use in LocalSettings.php
 * @see MainConfigSchema::InterlanguageLinkCodeMap
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgInterlanguageLinkCodeMap = [
];

/**
 * Variable for the ExtraLanguageNames setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtraLanguageNames
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtraLanguageNames = [
];

/**
 * Variable for the ExtraLanguageCodes setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtraLanguageCodes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtraLanguageCodes = [
	'bh' => 'bho',
	'no' => 'nb',
	'simple' => 'en',
];

/**
 * Variable for the DummyLanguageCodes setting, for use in LocalSettings.php
 * @see MainConfigSchema::DummyLanguageCodes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.29
 * @var array
 */
$wgDummyLanguageCodes = [
];

/**
 * Variable for the AllUnicodeFixes setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllUnicodeFixes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllUnicodeFixes = false;

/**
 * Variable for the LegacyEncoding setting, for use in LocalSettings.php
 * @see MainConfigSchema::LegacyEncoding
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLegacyEncoding = false;

/**
 * Variable for the LegacySchemaConversion setting, for use in LocalSettings.php
 * @see MainConfigSchema::LegacySchemaConversion
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLegacySchemaConversion = false;

/**
 * Variable for the AmericanDates setting, for use in LocalSettings.php
 * @see MainConfigSchema::AmericanDates
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAmericanDates = false;

/**
 * Variable for the TranslateNumerals setting, for use in LocalSettings.php
 * @see MainConfigSchema::TranslateNumerals
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgTranslateNumerals = true;

/**
 * Variable for the UseDatabaseMessages setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseDatabaseMessages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseDatabaseMessages = true;

/**
 * Variable for the MaxMsgCacheEntrySize setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxMsgCacheEntrySize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxMsgCacheEntrySize = 10000;

/**
 * Variable for the DisableLangConversion setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableLangConversion
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableLangConversion = false;

/**
 * Variable for the DisableTitleConversion setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableTitleConversion
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableTitleConversion = false;

/**
 * Variable for the DefaultLanguageVariant setting, for use in LocalSettings.php
 * @see MainConfigSchema::DefaultLanguageVariant
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDefaultLanguageVariant = false;

/**
 * Variable for the UsePigLatinVariant setting, for use in LocalSettings.php
 * @see MainConfigSchema::UsePigLatinVariant
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUsePigLatinVariant = false;

/**
 * Variable for the DisabledVariants setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisabledVariants
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgDisabledVariants = [
];

/**
 * Variable for the VariantArticlePath setting, for use in LocalSettings.php
 * @see MainConfigSchema::VariantArticlePath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgVariantArticlePath = false;

/**
 * Variable for the LoginLanguageSelector setting, for use in LocalSettings.php
 * @see MainConfigSchema::LoginLanguageSelector
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLoginLanguageSelector = false;

/**
 * Variable for the ForceUIMsgAsContentMsg setting, for use in LocalSettings.php
 * @see MainConfigSchema::ForceUIMsgAsContentMsg
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgForceUIMsgAsContentMsg = [
];

/**
 * Variable for the RawHtmlMessages setting, for use in LocalSettings.php
 * @see MainConfigSchema::RawHtmlMessages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRawHtmlMessages = [
	0 => 'copyright',
	1 => 'history_copyright',
	2 => 'googlesearch',
	3 => 'feedback-terms',
	4 => 'feedback-termsofuse',
];

/**
 * Variable for the Localtimezone setting, for use in LocalSettings.php
 * @see MainConfigSchema::Localtimezone
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLocaltimezone = null;

/**
 * Variable for the LocalTZoffset setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalTZoffset
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLocalTZoffset = null;

/**
 * Variable for the OverrideUcfirstCharacters setting, for use in LocalSettings.php
 * @see MainConfigSchema::OverrideUcfirstCharacters
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgOverrideUcfirstCharacters = [
];

/**
 * Variable for the MimeType setting, for use in LocalSettings.php
 * @see MainConfigSchema::MimeType
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMimeType = 'text/html';

/**
 * Variable for the Html5Version setting, for use in LocalSettings.php
 * @see MainConfigSchema::Html5Version
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHtml5Version = null;

/**
 * Variable for the HTMLFormAllowTableFormat setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTMLFormAllowTableFormat
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHTMLFormAllowTableFormat = true;

/**
 * Variable for the UseMediaWikiUIEverywhere setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseMediaWikiUIEverywhere
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseMediaWikiUIEverywhere = false;

/**
 * Variable for the EditSubmitButtonLabelPublish setting, for use in LocalSettings.php
 * @see MainConfigSchema::EditSubmitButtonLabelPublish
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEditSubmitButtonLabelPublish = false;

/**
 * Variable for the XhtmlNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::XhtmlNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgXhtmlNamespaces = [
];

/**
 * Variable for the SiteNotice setting, for use in LocalSettings.php
 * @see MainConfigSchema::SiteNotice
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSiteNotice = '';

/**
 * Variable for the BrowserFormatDetection setting, for use in LocalSettings.php
 * @see MainConfigSchema::BrowserFormatDetection
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string
 */
$wgBrowserFormatDetection = 'telephone=no';

/**
 * Variable for the SkinMetaTags setting, for use in LocalSettings.php
 * @see MainConfigSchema::SkinMetaTags
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSkinMetaTags = [
];

/**
 * Variable for the DefaultSkin setting, for use in LocalSettings.php
 * @see MainConfigSchema::DefaultSkin
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDefaultSkin = 'vector';

/**
 * Variable for the FallbackSkin setting, for use in LocalSettings.php
 * @see MainConfigSchema::FallbackSkin
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFallbackSkin = 'fallback';

/**
 * Variable for the SkipSkins setting, for use in LocalSettings.php
 * @see MainConfigSchema::SkipSkins
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSkipSkins = [
];

/**
 * Variable for the DisableOutputCompression setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableOutputCompression
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableOutputCompression = false;

/**
 * Variable for the FragmentMode setting, for use in LocalSettings.php
 * @see MainConfigSchema::FragmentMode
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgFragmentMode = [
	0 => 'html5',
	1 => 'legacy',
];

/**
 * Variable for the ExternalInterwikiFragmentMode setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExternalInterwikiFragmentMode
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExternalInterwikiFragmentMode = 'legacy';

/**
 * Variable for the FooterIcons setting, for use in LocalSettings.php
 * @see MainConfigSchema::FooterIcons
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgFooterIcons = [
	'copyright' => [
		'copyright' => [
		],
	],
	'poweredby' => [
		'mediawiki' => [
			'src' => null,
			'url' => 'https://www.mediawiki.org/',
			'alt' => 'Powered by MediaWiki',
		],
	],
];

/**
 * Variable for the UseCombinedLoginLink setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseCombinedLoginLink
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseCombinedLoginLink = false;

/**
 * Variable for the Edititis setting, for use in LocalSettings.php
 * @see MainConfigSchema::Edititis
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEdititis = false;

/**
 * Variable for the Send404Code setting, for use in LocalSettings.php
 * @see MainConfigSchema::Send404Code
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSend404Code = true;

/**
 * Variable for the ShowRollbackEditCount setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowRollbackEditCount
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowRollbackEditCount = 10;

/**
 * Variable for the EnableCanonicalServerLink setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableCanonicalServerLink
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableCanonicalServerLink = false;

/**
 * Variable for the MangleFlashPolicy setting, for use in LocalSettings.php
 * @see MainConfigSchema::MangleFlashPolicy
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMangleFlashPolicy = true;

/**
 * Variable for the ResourceModules setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceModules
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgResourceModules = [
];

/**
 * Variable for the ResourceModuleSkinStyles setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceModuleSkinStyles
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgResourceModuleSkinStyles = [
];

/**
 * Variable for the ResourceLoaderSources setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderSources
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgResourceLoaderSources = [
];

/**
 * Variable for the ResourceBasePath setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceBasePath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResourceBasePath = null;

/**
 * Variable for the ResourceLoaderMaxage setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderMaxage
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgResourceLoaderMaxage = [
	'versioned' => 2592000,
	'unversioned' => 300,
];

/**
 * Variable for the ResourceLoaderUseObjectCacheForDeps setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderUseObjectCacheForDeps
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResourceLoaderUseObjectCacheForDeps = false;

/**
 * Variable for the ResourceLoaderDebug setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderDebug
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResourceLoaderDebug = false;

/**
 * Variable for the IncludeLegacyJavaScript setting, for use in LocalSettings.php
 * @see MainConfigSchema::IncludeLegacyJavaScript
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.26: Always declare dependencies.
 */
$wgIncludeLegacyJavaScript = false;

/**
 * Variable for the ResourceLoaderMaxQueryLength setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderMaxQueryLength
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int|bool
 */
$wgResourceLoaderMaxQueryLength = false;

/**
 * Variable for the ResourceLoaderValidateJS setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderValidateJS
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResourceLoaderValidateJS = true;

/**
 * Variable for the ResourceLoaderEnableJSProfiler setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderEnableJSProfiler
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResourceLoaderEnableJSProfiler = false;

/**
 * Variable for the ResourceLoaderStorageEnabled setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderStorageEnabled
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResourceLoaderStorageEnabled = true;

/**
 * Variable for the ResourceLoaderStorageVersion setting, for use in LocalSettings.php
 * @see MainConfigSchema::ResourceLoaderStorageVersion
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgResourceLoaderStorageVersion = 1;

/**
 * Variable for the AllowSiteCSSOnRestrictedPages setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowSiteCSSOnRestrictedPages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowSiteCSSOnRestrictedPages = false;

/**
 * Variable for the VueDevelopmentMode setting, for use in LocalSettings.php
 * @see MainConfigSchema::VueDevelopmentMode
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgVueDevelopmentMode = false;

/**
 * Variable for the MetaNamespace setting, for use in LocalSettings.php
 * @see MainConfigSchema::MetaNamespace
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMetaNamespace = false;

/**
 * Variable for the MetaNamespaceTalk setting, for use in LocalSettings.php
 * @see MainConfigSchema::MetaNamespaceTalk
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMetaNamespaceTalk = false;

/**
 * Variable for the CanonicalNamespaceNames setting, for use in LocalSettings.php
 * @see MainConfigSchema::CanonicalNamespaceNames
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCanonicalNamespaceNames = [
	-2 => 'Media',
	-1 => 'Special',
	0 => '',
	1 => 'Talk',
	2 => 'User',
	3 => 'User_talk',
	4 => 'Project',
	5 => 'Project_talk',
	6 => 'File',
	7 => 'File_talk',
	8 => 'MediaWiki',
	9 => 'MediaWiki_talk',
	10 => 'Template',
	11 => 'Template_talk',
	12 => 'Help',
	13 => 'Help_talk',
	14 => 'Category',
	15 => 'Category_talk',
];

/**
 * Variable for the ExtraNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtraNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtraNamespaces = [
];

/**
 * Variable for the ExtraGenderNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtraGenderNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtraGenderNamespaces = [
];

/**
 * Variable for the NamespaceAliases setting, for use in LocalSettings.php
 * @see MainConfigSchema::NamespaceAliases
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNamespaceAliases = [
];

/**
 * Variable for the LegalTitleChars setting, for use in LocalSettings.php
 * @see MainConfigSchema::LegalTitleChars
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLegalTitleChars = ' %!"$&\'()*,\\-.\\/0-9:;=?@A-Z\\\\^_`a-z~\\x80-\\xFF+';

/**
 * Variable for the CapitalLinks setting, for use in LocalSettings.php
 * @see MainConfigSchema::CapitalLinks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCapitalLinks = true;

/**
 * Variable for the CapitalLinkOverrides setting, for use in LocalSettings.php
 * @see MainConfigSchema::CapitalLinkOverrides
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCapitalLinkOverrides = [
];

/**
 * Variable for the NamespacesWithSubpages setting, for use in LocalSettings.php
 * @see MainConfigSchema::NamespacesWithSubpages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNamespacesWithSubpages = [
	1 => true,
	2 => true,
	3 => true,
	4 => true,
	5 => true,
	7 => true,
	8 => true,
	9 => true,
	10 => true,
	11 => true,
	12 => true,
	13 => true,
	15 => true,
];

/**
 * Variable for the ContentNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::ContentNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgContentNamespaces = [
	0 => 0,
];

/**
 * Variable for the ShortPagesNamespaceExclusions setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShortPagesNamespaceExclusions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgShortPagesNamespaceExclusions = [
];

/**
 * Variable for the ExtraSignatureNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtraSignatureNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtraSignatureNamespaces = [
];

/**
 * Variable for the InvalidRedirectTargets setting, for use in LocalSettings.php
 * @see MainConfigSchema::InvalidRedirectTargets
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgInvalidRedirectTargets = [
	0 => 'Filepath',
	1 => 'Mypage',
	2 => 'Mytalk',
	3 => 'Redirect',
];

/**
 * Variable for the DisableHardRedirects setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableHardRedirects
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableHardRedirects = false;

/**
 * Variable for the FixDoubleRedirects setting, for use in LocalSettings.php
 * @see MainConfigSchema::FixDoubleRedirects
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFixDoubleRedirects = false;

/**
 * Variable for the InterwikiPrefixDisplayTypes setting, for use in LocalSettings.php
 * @see MainConfigSchema::InterwikiPrefixDisplayTypes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgInterwikiPrefixDisplayTypes = [
];

/**
 * Variable for the LocalInterwikis setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalInterwikis
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLocalInterwikis = [
];

/**
 * Variable for the InterwikiExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::InterwikiExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInterwikiExpiry = 10800;

/**
 * Variable for the InterwikiCache setting, for use in LocalSettings.php
 * @see MainConfigSchema::InterwikiCache
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|array|string
 */
$wgInterwikiCache = false;

/**
 * Variable for the InterwikiScopes setting, for use in LocalSettings.php
 * @see MainConfigSchema::InterwikiScopes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInterwikiScopes = 3;

/**
 * Variable for the InterwikiFallbackSite setting, for use in LocalSettings.php
 * @see MainConfigSchema::InterwikiFallbackSite
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInterwikiFallbackSite = 'wiki';

/**
 * Variable for the RedirectSources setting, for use in LocalSettings.php
 * @see MainConfigSchema::RedirectSources
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRedirectSources = false;

/**
 * Variable for the SiteTypes setting, for use in LocalSettings.php
 * @see MainConfigSchema::SiteTypes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSiteTypes = [
	'mediawiki' => 'MediaWikiSite',
];

/**
 * Variable for the MaxTocLevel setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxTocLevel
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxTocLevel = 999;

/**
 * Variable for the MaxPPNodeCount setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxPPNodeCount
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxPPNodeCount = 1000000;

/**
 * Variable for the MaxTemplateDepth setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxTemplateDepth
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxTemplateDepth = 100;

/**
 * Variable for the MaxPPExpandDepth setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxPPExpandDepth
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxPPExpandDepth = 100;

/**
 * Variable for the UrlProtocols setting, for use in LocalSettings.php
 * @see MainConfigSchema::UrlProtocols
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgUrlProtocols = [
	0 => 'bitcoin:',
	1 => 'ftp://',
	2 => 'ftps://',
	3 => 'geo:',
	4 => 'git://',
	5 => 'gopher://',
	6 => 'http://',
	7 => 'https://',
	8 => 'irc://',
	9 => 'ircs://',
	10 => 'magnet:',
	11 => 'mailto:',
	12 => 'mms://',
	13 => 'news:',
	14 => 'nntp://',
	15 => 'redis://',
	16 => 'sftp://',
	17 => 'sip:',
	18 => 'sips:',
	19 => 'sms:',
	20 => 'ssh://',
	21 => 'svn://',
	22 => 'tel:',
	23 => 'telnet://',
	24 => 'urn:',
	25 => 'worldwind://',
	26 => 'xmpp:',
	27 => '//',
];

/**
 * Variable for the CleanSignatures setting, for use in LocalSettings.php
 * @see MainConfigSchema::CleanSignatures
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCleanSignatures = true;

/**
 * Variable for the AllowExternalImages setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowExternalImages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowExternalImages = false;

/**
 * Variable for the AllowExternalImagesFrom setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowExternalImagesFrom
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowExternalImagesFrom = '';

/**
 * Variable for the EnableImageWhitelist setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableImageWhitelist
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableImageWhitelist = false;

/**
 * Variable for the AllowImageTag setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowImageTag
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.35; register an extension tag named <img> instead.
 */
$wgAllowImageTag = false;

/**
 * Variable for the TidyConfig setting, for use in LocalSettings.php
 * @see MainConfigSchema::TidyConfig
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgTidyConfig = [
];

/**
 * Variable for the ParsoidSettings setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParsoidSettings
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgParsoidSettings = [
	'useSelser' => true,
];

/**
 * Variable for the ParserEnableLegacyMediaDOM setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParserEnableLegacyMediaDOM
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgParserEnableLegacyMediaDOM = true;

/**
 * Variable for the UseContentMediaStyles setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseContentMediaStyles
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseContentMediaStyles = false;

/**
 * Variable for the RawHtml setting, for use in LocalSettings.php
 * @see MainConfigSchema::RawHtml
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRawHtml = false;

/**
 * Variable for the ExternalLinkTarget setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExternalLinkTarget
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExternalLinkTarget = false;

/**
 * Variable for the NoFollowLinks setting, for use in LocalSettings.php
 * @see MainConfigSchema::NoFollowLinks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgNoFollowLinks = true;

/**
 * Variable for the NoFollowNsExceptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::NoFollowNsExceptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNoFollowNsExceptions = [
];

/**
 * Variable for the NoFollowDomainExceptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::NoFollowDomainExceptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNoFollowDomainExceptions = [
	0 => 'mediawiki.org',
];

/**
 * Variable for the RegisterInternalExternals setting, for use in LocalSettings.php
 * @see MainConfigSchema::RegisterInternalExternals
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRegisterInternalExternals = false;

/**
 * Variable for the AllowDisplayTitle setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowDisplayTitle
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowDisplayTitle = true;

/**
 * Variable for the RestrictDisplayTitle setting, for use in LocalSettings.php
 * @see MainConfigSchema::RestrictDisplayTitle
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRestrictDisplayTitle = true;

/**
 * Variable for the ExpensiveParserFunctionLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExpensiveParserFunctionLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExpensiveParserFunctionLimit = 100;

/**
 * Variable for the PreprocessorCacheThreshold setting, for use in LocalSettings.php
 * @see MainConfigSchema::PreprocessorCacheThreshold
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPreprocessorCacheThreshold = 1000;

/**
 * Variable for the EnableScaryTranscluding setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableScaryTranscluding
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableScaryTranscluding = false;

/**
 * Variable for the TranscludeCacheExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::TranscludeCacheExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgTranscludeCacheExpiry = 3600;

/**
 * Variable for the EnableMagicLinks setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableMagicLinks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgEnableMagicLinks = [
	'ISBN' => false,
	'PMID' => false,
	'RFC' => false,
];

/**
 * Variable for the ArticleCountMethod setting, for use in LocalSettings.php
 * @see MainConfigSchema::ArticleCountMethod
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgArticleCountMethod = 'link';

/**
 * Variable for the ActiveUserDays setting, for use in LocalSettings.php
 * @see MainConfigSchema::ActiveUserDays
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgActiveUserDays = 30;

/**
 * Variable for the LearnerEdits setting, for use in LocalSettings.php
 * @see MainConfigSchema::LearnerEdits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLearnerEdits = 10;

/**
 * Variable for the LearnerMemberSince setting, for use in LocalSettings.php
 * @see MainConfigSchema::LearnerMemberSince
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLearnerMemberSince = 4;

/**
 * Variable for the ExperiencedUserEdits setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExperiencedUserEdits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExperiencedUserEdits = 500;

/**
 * Variable for the ExperiencedUserMemberSince setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExperiencedUserMemberSince
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExperiencedUserMemberSince = 30;

/**
 * Variable for the ManualRevertSearchRadius setting, for use in LocalSettings.php
 * @see MainConfigSchema::ManualRevertSearchRadius
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int
 */
$wgManualRevertSearchRadius = 15;

/**
 * Variable for the RevertedTagMaxDepth setting, for use in LocalSettings.php
 * @see MainConfigSchema::RevertedTagMaxDepth
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int
 */
$wgRevertedTagMaxDepth = 15;

/**
 * Variable for the CentralIdLookupProviders setting, for use in LocalSettings.php
 * @see MainConfigSchema::CentralIdLookupProviders
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCentralIdLookupProviders = [
	'local' => [
		'class' => 'LocalIdLookup',
		'services' => [
			0 => 'MainConfig',
			1 => 'DBLoadBalancer',
		],
	],
];

/**
 * Variable for the CentralIdLookupProvider setting, for use in LocalSettings.php
 * @see MainConfigSchema::CentralIdLookupProvider
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string
 */
$wgCentralIdLookupProvider = 'local';

/**
 * Variable for the PasswordPolicy setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordPolicy
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgPasswordPolicy = [
	'policies' => [
		'bureaucrat' => [
			'MinimalPasswordLength' => 10,
			'MinimumPasswordLengthToLogin' => 1,
		],
		'sysop' => [
			'MinimalPasswordLength' => 10,
			'MinimumPasswordLengthToLogin' => 1,
		],
		'interface-admin' => [
			'MinimalPasswordLength' => 10,
			'MinimumPasswordLengthToLogin' => 1,
		],
		'bot' => [
			'MinimalPasswordLength' => 10,
			'MinimumPasswordLengthToLogin' => 1,
		],
		'default' => [
			'MinimalPasswordLength' => [
				'value' => 1,
				'suggestChangeOnLogin' => true,
			],
			'PasswordCannotBeSubstringInUsername' => [
				'value' => true,
				'suggestChangeOnLogin' => true,
			],
			'PasswordCannotMatchDefaults' => [
				'value' => true,
				'suggestChangeOnLogin' => true,
			],
			'MaximalPasswordLength' => [
				'value' => 4096,
				'suggestChangeOnLogin' => true,
			],
			'PasswordNotInCommonList' => [
				'value' => true,
				'suggestChangeOnLogin' => true,
			],
		],
	],
	'checks' => [
		'MinimalPasswordLength' => 'PasswordPolicyChecks::checkMinimalPasswordLength',
		'MinimumPasswordLengthToLogin' => 'PasswordPolicyChecks::checkMinimumPasswordLengthToLogin',
		'PasswordCannotBeSubstringInUsername' => 'PasswordPolicyChecks::checkPasswordCannotBeSubstringInUsername',
		'PasswordCannotMatchDefaults' => 'PasswordPolicyChecks::checkPasswordCannotMatchDefaults',
		'MaximalPasswordLength' => 'PasswordPolicyChecks::checkMaximalPasswordLength',
		'PasswordNotInCommonList' => 'PasswordPolicyChecks::checkPasswordNotInCommonList',
	],
];

/**
 * Variable for the AuthManagerConfig setting, for use in LocalSettings.php
 * @see MainConfigSchema::AuthManagerConfig
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?array
 */
$wgAuthManagerConfig = null;

/**
 * Variable for the AuthManagerAutoConfig setting, for use in LocalSettings.php
 * @see MainConfigSchema::AuthManagerAutoConfig
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAuthManagerAutoConfig = [
	'preauth' => [
		'MediaWiki\\Auth\\ThrottlePreAuthenticationProvider' => [
			'class' => 'MediaWiki\\Auth\\ThrottlePreAuthenticationProvider',
			'sort' => 0,
		],
	],
	'primaryauth' => [
		'MediaWiki\\Auth\\TemporaryPasswordPrimaryAuthenticationProvider' => [
			'class' => 'MediaWiki\\Auth\\TemporaryPasswordPrimaryAuthenticationProvider',
			'services' => [
				0 => 'DBLoadBalancer',
				1 => 'UserOptionsLookup',
			],
			'args' => [
				0 => [
					'authoritative' => false,
				],
			],
			'sort' => 0,
		],
		'MediaWiki\\Auth\\LocalPasswordPrimaryAuthenticationProvider' => [
			'class' => 'MediaWiki\\Auth\\LocalPasswordPrimaryAuthenticationProvider',
			'services' => [
				0 => 'DBLoadBalancer',
			],
			'args' => [
				0 => [
					'authoritative' => true,
				],
			],
			'sort' => 100,
		],
	],
	'secondaryauth' => [
		'MediaWiki\\Auth\\CheckBlocksSecondaryAuthenticationProvider' => [
			'class' => 'MediaWiki\\Auth\\CheckBlocksSecondaryAuthenticationProvider',
			'sort' => 0,
		],
		'MediaWiki\\Auth\\ResetPasswordSecondaryAuthenticationProvider' => [
			'class' => 'MediaWiki\\Auth\\ResetPasswordSecondaryAuthenticationProvider',
			'sort' => 100,
		],
		'MediaWiki\\Auth\\EmailNotificationSecondaryAuthenticationProvider' => [
			'class' => 'MediaWiki\\Auth\\EmailNotificationSecondaryAuthenticationProvider',
			'services' => [
				0 => 'DBLoadBalancer',
			],
			'sort' => 200,
		],
	],
];

/**
 * Variable for the RememberMe setting, for use in LocalSettings.php
 * @see MainConfigSchema::RememberMe
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string
 */
$wgRememberMe = 'choose';

/**
 * Variable for the ReauthenticateTime setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReauthenticateTime
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgReauthenticateTime = [
	'default' => 300,
];

/**
 * Variable for the AllowSecuritySensitiveOperationIfCannotReauthenticate setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowSecuritySensitiveOperationIfCannotReauthenticate
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAllowSecuritySensitiveOperationIfCannotReauthenticate = [
	'default' => true,
];

/**
 * Variable for the ChangeCredentialsBlacklist setting, for use in LocalSettings.php
 * @see MainConfigSchema::ChangeCredentialsBlacklist
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgChangeCredentialsBlacklist = [
	0 => 'MediaWiki\\Auth\\TemporaryPasswordAuthenticationRequest',
];

/**
 * Variable for the RemoveCredentialsBlacklist setting, for use in LocalSettings.php
 * @see MainConfigSchema::RemoveCredentialsBlacklist
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRemoveCredentialsBlacklist = [
	0 => 'MediaWiki\\Auth\\PasswordAuthenticationRequest',
];

/**
 * Variable for the MinimalPasswordLength setting, for use in LocalSettings.php
 * @see MainConfigSchema::MinimalPasswordLength
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.26, use $wgPasswordPolicy's MinimalPasswordLength.
 */
$wgMinimalPasswordLength = false;

/**
 * Variable for the MaximalPasswordLength setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaximalPasswordLength
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.26, use $wgPasswordPolicy's MaximalPasswordLength.
 */
$wgMaximalPasswordLength = false;

/**
 * Variable for the InvalidPasswordReset setting, for use in LocalSettings.php
 * @see MainConfigSchema::InvalidPasswordReset
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInvalidPasswordReset = true;

/**
 * Variable for the PasswordDefault setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordDefault
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPasswordDefault = 'pbkdf2';

/**
 * Variable for the PasswordConfig setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordConfig
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgPasswordConfig = [
	'A' => [
		'class' => 'MWOldPassword',
	],
	'B' => [
		'class' => 'MWSaltedPassword',
	],
	'pbkdf2-legacyA' => [
		'class' => 'LayeredParameterizedPassword',
		'types' => [
			0 => 'A',
			1 => 'pbkdf2',
		],
	],
	'pbkdf2-legacyB' => [
		'class' => 'LayeredParameterizedPassword',
		'types' => [
			0 => 'B',
			1 => 'pbkdf2',
		],
	],
	'bcrypt' => [
		'class' => 'BcryptPassword',
		'cost' => 9,
	],
	'pbkdf2' => [
		'class' => 'Pbkdf2Password',
		'algo' => 'sha512',
		'cost' => '30000',
		'length' => '64',
	],
	'argon2' => [
		'class' => 'Argon2Password',
		'algo' => 'auto',
	],
];

/**
 * Variable for the PasswordResetRoutes setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordResetRoutes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgPasswordResetRoutes = [
	'username' => true,
	'email' => true,
];

/**
 * Variable for the MaxSigChars setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxSigChars
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxSigChars = 255;

/**
 * Variable for the SignatureValidation setting, for use in LocalSettings.php
 * @see MainConfigSchema::SignatureValidation
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSignatureValidation = 'warning';

/**
 * Variable for the SignatureAllowedLintErrors setting, for use in LocalSettings.php
 * @see MainConfigSchema::SignatureAllowedLintErrors
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSignatureAllowedLintErrors = [
	0 => 'obsolete-tag',
];

/**
 * Variable for the MaxNameChars setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxNameChars
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxNameChars = 255;

/**
 * Variable for the ReservedUsernames setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReservedUsernames
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgReservedUsernames = [
	0 => 'MediaWiki default',
	1 => 'Conversion script',
	2 => 'Maintenance script',
	3 => 'Template namespace initialisation script',
	4 => 'ScriptImporter',
	5 => 'Unknown user',
	6 => 'msg:double-redirect-fixer',
	7 => 'msg:usermessage-editor',
	8 => 'msg:proxyblocker',
	9 => 'msg:sorbs',
	10 => 'msg:spambot_username',
	11 => 'msg:autochange-username',
];

/**
 * Variable for the DefaultUserOptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::DefaultUserOptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgDefaultUserOptions = [
	'ccmeonemails' => 0,
	'date' => 'default',
	'diffonly' => 0,
	'disablemail' => 0,
	'editfont' => 'monospace',
	'editondblclick' => 0,
	'editsectiononrightclick' => 0,
	'email-allow-new-users' => 1,
	'enotifminoredits' => 0,
	'enotifrevealaddr' => 0,
	'enotifusertalkpages' => 1,
	'enotifwatchlistpages' => 1,
	'extendwatchlist' => 1,
	'fancysig' => 0,
	'forceeditsummary' => 0,
	'gender' => 'unknown',
	'hideminor' => 0,
	'hidepatrolled' => 0,
	'hidecategorization' => 1,
	'imagesize' => 2,
	'minordefault' => 0,
	'newpageshidepatrolled' => 0,
	'nickname' => '',
	'pst-cssjs' => 1,
	'norollbackdiff' => 0,
	'previewonfirst' => 0,
	'previewontop' => 1,
	'rcdays' => 7,
	'rcenhancedfilters-disable' => 0,
	'rclimit' => 50,
	'search-match-redirect' => true,
	'search-special-page' => 'Search',
	'searchlimit' => 20,
	'showhiddencats' => 0,
	'shownumberswatching' => 1,
	'showrollbackconfirmation' => 0,
	'skin' => false,
	'thumbsize' => 5,
	'underline' => 2,
	'uselivepreview' => 0,
	'usenewrc' => 1,
	'watchcreations' => 1,
	'watchdefault' => 1,
	'watchdeletion' => 0,
	'watchuploads' => 1,
	'watchlistdays' => 7,
	'watchlisthideanons' => 0,
	'watchlisthidebots' => 0,
	'watchlisthideliu' => 0,
	'watchlisthideminor' => 0,
	'watchlisthideown' => 0,
	'watchlisthidepatrolled' => 0,
	'watchlisthidecategorization' => 1,
	'watchlistreloadautomatically' => 0,
	'watchlistunwatchlinks' => 0,
	'watchmoves' => 0,
	'watchrollback' => 0,
	'wlenhancedfilters-disable' => 0,
	'wllimit' => 250,
	'useeditwarning' => 1,
	'prefershttps' => 1,
	'requireemail' => 0,
	'skin-responsive' => 1,
];

/**
 * Variable for the HiddenPrefs setting, for use in LocalSettings.php
 * @see MainConfigSchema::HiddenPrefs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgHiddenPrefs = [
];

/**
 * Variable for the InvalidUsernameCharacters setting, for use in LocalSettings.php
 * @see MainConfigSchema::InvalidUsernameCharacters
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgInvalidUsernameCharacters = '@:';

/**
 * Variable for the UserrightsInterwikiDelimiter setting, for use in LocalSettings.php
 * @see MainConfigSchema::UserrightsInterwikiDelimiter
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUserrightsInterwikiDelimiter = '@';

/**
 * Variable for the SecureLogin setting, for use in LocalSettings.php
 * @see MainConfigSchema::SecureLogin
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSecureLogin = false;

/**
 * Variable for the AuthenticationTokenVersion setting, for use in LocalSettings.php
 * @see MainConfigSchema::AuthenticationTokenVersion
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgAuthenticationTokenVersion = null;

/**
 * Variable for the SessionProviders setting, for use in LocalSettings.php
 * @see MainConfigSchema::SessionProviders
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSessionProviders = [
	'MediaWiki\\Session\\CookieSessionProvider' => [
		'class' => 'MediaWiki\\Session\\CookieSessionProvider',
		'args' => [
			0 => [
				'priority' => 30,
				'callUserSetCookiesHook' => true,
			],
		],
	],
	'MediaWiki\\Session\\BotPasswordSessionProvider' => [
		'class' => 'MediaWiki\\Session\\BotPasswordSessionProvider',
		'args' => [
			0 => [
				'priority' => 75,
			],
		],
		'services' => [
			0 => 'GrantsInfo',
		],
	],
];

/**
 * Variable for the AllowRequiringEmailForResets setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowRequiringEmailForResets
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated This feature is under development, don't assume this flag's existence or
 *    function outside of MediaWiki
 */
$wgAllowRequiringEmailForResets = false;

/**
 * Variable for the AutoCreateTempUser setting, for use in LocalSettings.php
 * @see MainConfigSchema::AutoCreateTempUser
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAutoCreateTempUser = [
	'enabled' => false,
	'actions' => [
		0 => 'edit',
	],
	'genPattern' => '*Unregistered $1',
	'matchPattern' => '*$1',
	'serialProvider' => [
		'type' => 'local',
	],
	'serialMapping' => [
		'type' => 'plain-numeric',
	],
];

/**
 * Variable for the AutoblockExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::AutoblockExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAutoblockExpiry = 86400;

/**
 * Variable for the BlockAllowsUTEdit setting, for use in LocalSettings.php
 * @see MainConfigSchema::BlockAllowsUTEdit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgBlockAllowsUTEdit = true;

/**
 * Variable for the BlockCIDRLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::BlockCIDRLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgBlockCIDRLimit = [
	'IPv4' => 16,
	'IPv6' => 19,
];

/**
 * Variable for the BlockDisablesLogin setting, for use in LocalSettings.php
 * @see MainConfigSchema::BlockDisablesLogin
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgBlockDisablesLogin = false;

/**
 * Variable for the EnablePartialActionBlocks setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnablePartialActionBlocks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgEnablePartialActionBlocks = false;

/**
 * Variable for the WhitelistRead setting, for use in LocalSettings.php
 * @see MainConfigSchema::WhitelistRead
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgWhitelistRead = false;

/**
 * Variable for the WhitelistReadRegexp setting, for use in LocalSettings.php
 * @see MainConfigSchema::WhitelistReadRegexp
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgWhitelistReadRegexp = false;

/**
 * Variable for the EmailConfirmToEdit setting, for use in LocalSettings.php
 * @see MainConfigSchema::EmailConfirmToEdit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEmailConfirmToEdit = false;

/**
 * Variable for the HideIdentifiableRedirects setting, for use in LocalSettings.php
 * @see MainConfigSchema::HideIdentifiableRedirects
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHideIdentifiableRedirects = true;

/**
 * Variable for the GroupPermissions setting, for use in LocalSettings.php
 * @see MainConfigSchema::GroupPermissions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGroupPermissions = [
	'*' => [
		'createaccount' => true,
		'read' => true,
		'edit' => true,
		'createpage' => true,
		'createtalk' => true,
		'writeapi' => true,
		'viewmywatchlist' => true,
		'editmywatchlist' => true,
		'viewmyprivateinfo' => true,
		'editmyprivateinfo' => true,
		'editmyoptions' => true,
	],
	'user' => [
		'move' => true,
		'move-subpages' => true,
		'move-rootuserpages' => true,
		'move-categorypages' => true,
		'movefile' => true,
		'read' => true,
		'edit' => true,
		'createpage' => true,
		'createtalk' => true,
		'writeapi' => true,
		'upload' => true,
		'reupload' => true,
		'reupload-shared' => true,
		'minoredit' => true,
		'editmyusercss' => true,
		'editmyuserjson' => true,
		'editmyuserjs' => true,
		'editmyuserjsredirect' => true,
		'purge' => true,
		'sendemail' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
	],
	'autoconfirmed' => [
		'autoconfirmed' => true,
		'editsemiprotected' => true,
	],
	'bot' => [
		'bot' => true,
		'autoconfirmed' => true,
		'editsemiprotected' => true,
		'nominornewtalk' => true,
		'autopatrol' => true,
		'suppressredirect' => true,
		'apihighlimits' => true,
		'writeapi' => true,
	],
	'sysop' => [
		'block' => true,
		'createaccount' => true,
		'delete' => true,
		'bigdelete' => true,
		'deletedhistory' => true,
		'deletedtext' => true,
		'undelete' => true,
		'editinterface' => true,
		'editsitejson' => true,
		'edituserjson' => true,
		'import' => true,
		'importupload' => true,
		'move' => true,
		'move-subpages' => true,
		'move-rootuserpages' => true,
		'move-categorypages' => true,
		'patrol' => true,
		'autopatrol' => true,
		'protect' => true,
		'editprotected' => true,
		'rollback' => true,
		'upload' => true,
		'reupload' => true,
		'reupload-shared' => true,
		'unwatchedpages' => true,
		'autoconfirmed' => true,
		'editsemiprotected' => true,
		'ipblock-exempt' => true,
		'blockemail' => true,
		'markbotedits' => true,
		'apihighlimits' => true,
		'browsearchive' => true,
		'noratelimit' => true,
		'movefile' => true,
		'unblockself' => true,
		'suppressredirect' => true,
		'mergehistory' => true,
		'managechangetags' => true,
		'deletechangetags' => true,
	],
	'interface-admin' => [
		'editinterface' => true,
		'editsitecss' => true,
		'editsitejson' => true,
		'editsitejs' => true,
		'editusercss' => true,
		'edituserjson' => true,
		'edituserjs' => true,
	],
	'bureaucrat' => [
		'userrights' => true,
		'noratelimit' => true,
	],
	'suppress' => [
		'hideuser' => true,
		'suppressrevision' => true,
		'viewsuppressed' => true,
		'suppressionlog' => true,
		'deleterevision' => true,
		'deletelogentry' => true,
	],
];

/**
 * Variable for the RevokePermissions setting, for use in LocalSettings.php
 * @see MainConfigSchema::RevokePermissions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRevokePermissions = [
];

/**
 * Variable for the GroupInheritsPermissions setting, for use in LocalSettings.php
 * @see MainConfigSchema::GroupInheritsPermissions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGroupInheritsPermissions = [
];

/**
 * Variable for the ImplicitGroups setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImplicitGroups
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgImplicitGroups = [
	0 => '*',
	1 => 'user',
	2 => 'autoconfirmed',
];

/**
 * Variable for the GroupsAddToSelf setting, for use in LocalSettings.php
 * @see MainConfigSchema::GroupsAddToSelf
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGroupsAddToSelf = [
];

/**
 * Variable for the GroupsRemoveFromSelf setting, for use in LocalSettings.php
 * @see MainConfigSchema::GroupsRemoveFromSelf
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGroupsRemoveFromSelf = [
];

/**
 * Variable for the RestrictionTypes setting, for use in LocalSettings.php
 * @see MainConfigSchema::RestrictionTypes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRestrictionTypes = [
	0 => 'create',
	1 => 'edit',
	2 => 'move',
	3 => 'upload',
];

/**
 * Variable for the RestrictionLevels setting, for use in LocalSettings.php
 * @see MainConfigSchema::RestrictionLevels
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRestrictionLevels = [
	0 => '',
	1 => 'autoconfirmed',
	2 => 'sysop',
];

/**
 * Variable for the CascadingRestrictionLevels setting, for use in LocalSettings.php
 * @see MainConfigSchema::CascadingRestrictionLevels
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCascadingRestrictionLevels = [
	0 => 'sysop',
];

/**
 * Variable for the SemiprotectedRestrictionLevels setting, for use in LocalSettings.php
 * @see MainConfigSchema::SemiprotectedRestrictionLevels
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSemiprotectedRestrictionLevels = [
	0 => 'autoconfirmed',
];

/**
 * Variable for the NamespaceProtection setting, for use in LocalSettings.php
 * @see MainConfigSchema::NamespaceProtection
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNamespaceProtection = [
];

/**
 * Variable for the NonincludableNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::NonincludableNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNonincludableNamespaces = [
];

/**
 * Variable for the AutoConfirmAge setting, for use in LocalSettings.php
 * @see MainConfigSchema::AutoConfirmAge
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAutoConfirmAge = 0;

/**
 * Variable for the AutoConfirmCount setting, for use in LocalSettings.php
 * @see MainConfigSchema::AutoConfirmCount
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAutoConfirmCount = 0;

/**
 * Variable for the Autopromote setting, for use in LocalSettings.php
 * @see MainConfigSchema::Autopromote
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAutopromote = [
	'autoconfirmed' => [
		0 => '&',
		1 => [
			0 => 1,
			1 => null,
		],
		2 => [
			0 => 2,
			1 => null,
		],
	],
];

/**
 * Variable for the AutopromoteOnce setting, for use in LocalSettings.php
 * @see MainConfigSchema::AutopromoteOnce
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAutopromoteOnce = [
	'onEdit' => [
	],
];

/**
 * Variable for the AutopromoteOnceLogInRC setting, for use in LocalSettings.php
 * @see MainConfigSchema::AutopromoteOnceLogInRC
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAutopromoteOnceLogInRC = true;

/**
 * Variable for the AddGroups setting, for use in LocalSettings.php
 * @see MainConfigSchema::AddGroups
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAddGroups = [
];

/**
 * Variable for the RemoveGroups setting, for use in LocalSettings.php
 * @see MainConfigSchema::RemoveGroups
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRemoveGroups = [
];

/**
 * Variable for the AvailableRights setting, for use in LocalSettings.php
 * @see MainConfigSchema::AvailableRights
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAvailableRights = [
];

/**
 * Variable for the DeleteRevisionsLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::DeleteRevisionsLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDeleteRevisionsLimit = 0;

/**
 * Variable for the DeleteRevisionsBatchSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::DeleteRevisionsBatchSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDeleteRevisionsBatchSize = 1000;

/**
 * Variable for the HideUserContribLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::HideUserContribLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHideUserContribLimit = 1000;

/**
 * Variable for the AccountCreationThrottle setting, for use in LocalSettings.php
 * @see MainConfigSchema::AccountCreationThrottle
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAccountCreationThrottle = [
	0 => [
		'count' => 0,
		'seconds' => 86400,
	],
];

/**
 * Variable for the SpamRegex setting, for use in LocalSettings.php
 * @see MainConfigSchema::SpamRegex
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSpamRegex = [
];

/**
 * Variable for the SummarySpamRegex setting, for use in LocalSettings.php
 * @see MainConfigSchema::SummarySpamRegex
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSummarySpamRegex = [
];

/**
 * Variable for the EnableDnsBlacklist setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableDnsBlacklist
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableDnsBlacklist = false;

/**
 * Variable for the DnsBlacklistUrls setting, for use in LocalSettings.php
 * @see MainConfigSchema::DnsBlacklistUrls
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgDnsBlacklistUrls = [
	0 => 'http.dnsbl.sorbs.net.',
];

/**
 * Variable for the ProxyList setting, for use in LocalSettings.php
 * @see MainConfigSchema::ProxyList
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|array
 */
$wgProxyList = [
];

/**
 * Variable for the ProxyWhitelist setting, for use in LocalSettings.php
 * @see MainConfigSchema::ProxyWhitelist
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgProxyWhitelist = [
];

/**
 * Variable for the SoftBlockRanges setting, for use in LocalSettings.php
 * @see MainConfigSchema::SoftBlockRanges
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSoftBlockRanges = [
];

/**
 * Variable for the ApplyIpBlocksToXff setting, for use in LocalSettings.php
 * @see MainConfigSchema::ApplyIpBlocksToXff
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgApplyIpBlocksToXff = false;

/**
 * Variable for the RateLimits setting, for use in LocalSettings.php
 * @see MainConfigSchema::RateLimits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRateLimits = [
	'edit' => [
		'ip' => [
			0 => 8,
			1 => 60,
		],
		'newbie' => [
			0 => 8,
			1 => 60,
		],
		'user' => [
			0 => 90,
			1 => 60,
		],
	],
	'move' => [
		'newbie' => [
			0 => 2,
			1 => 120,
		],
		'user' => [
			0 => 8,
			1 => 60,
		],
	],
	'upload' => [
		'ip' => [
			0 => 8,
			1 => 60,
		],
		'newbie' => [
			0 => 8,
			1 => 60,
		],
	],
	'rollback' => [
		'user' => [
			0 => 10,
			1 => 60,
		],
		'newbie' => [
			0 => 5,
			1 => 120,
		],
	],
	'mailpassword' => [
		'ip' => [
			0 => 5,
			1 => 3600,
		],
	],
	'emailuser' => [
		'ip' => [
			0 => 5,
			1 => 86400,
		],
		'newbie' => [
			0 => 5,
			1 => 86400,
		],
		'user' => [
			0 => 20,
			1 => 86400,
		],
	],
	'changeemail' => [
		'ip-all' => [
			0 => 10,
			1 => 3600,
		],
		'user' => [
			0 => 4,
			1 => 86400,
		],
	],
	'confirmemail' => [
		'ip-all' => [
			0 => 10,
			1 => 3600,
		],
		'user' => [
			0 => 4,
			1 => 86400,
		],
	],
	'purge' => [
		'ip' => [
			0 => 30,
			1 => 60,
		],
		'user' => [
			0 => 30,
			1 => 60,
		],
	],
	'linkpurge' => [
		'ip' => [
			0 => 30,
			1 => 60,
		],
		'user' => [
			0 => 30,
			1 => 60,
		],
	],
	'renderfile' => [
		'ip' => [
			0 => 700,
			1 => 30,
		],
		'user' => [
			0 => 700,
			1 => 30,
		],
	],
	'renderfile-nonstandard' => [
		'ip' => [
			0 => 70,
			1 => 30,
		],
		'user' => [
			0 => 70,
			1 => 30,
		],
	],
	'stashedit' => [
		'ip' => [
			0 => 30,
			1 => 60,
		],
		'newbie' => [
			0 => 30,
			1 => 60,
		],
	],
	'changetag' => [
		'ip' => [
			0 => 8,
			1 => 60,
		],
		'newbie' => [
			0 => 8,
			1 => 60,
		],
	],
	'editcontentmodel' => [
		'newbie' => [
			0 => 2,
			1 => 120,
		],
		'user' => [
			0 => 8,
			1 => 60,
		],
	],
];

/**
 * Variable for the RateLimitsExcludedIPs setting, for use in LocalSettings.php
 * @see MainConfigSchema::RateLimitsExcludedIPs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRateLimitsExcludedIPs = [
];

/**
 * Variable for the PutIPinRC setting, for use in LocalSettings.php
 * @see MainConfigSchema::PutIPinRC
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPutIPinRC = true;

/**
 * Variable for the QueryPageDefaultLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::QueryPageDefaultLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgQueryPageDefaultLimit = 50;

/**
 * Variable for the PasswordAttemptThrottle setting, for use in LocalSettings.php
 * @see MainConfigSchema::PasswordAttemptThrottle
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgPasswordAttemptThrottle = [
	0 => [
		'count' => 5,
		'seconds' => 300,
	],
	1 => [
		'count' => 150,
		'seconds' => 172800,
	],
];

/**
 * Variable for the GrantPermissions setting, for use in LocalSettings.php
 * @see MainConfigSchema::GrantPermissions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGrantPermissions = [
	'basic' => [
		'autocreateaccount' => true,
		'autoconfirmed' => true,
		'autopatrol' => true,
		'editsemiprotected' => true,
		'ipblock-exempt' => true,
		'nominornewtalk' => true,
		'patrolmarks' => true,
		'purge' => true,
		'read' => true,
		'writeapi' => true,
		'unwatchedpages' => true,
	],
	'highvolume' => [
		'bot' => true,
		'apihighlimits' => true,
		'noratelimit' => true,
		'markbotedits' => true,
	],
	'import' => [
		'import' => true,
		'importupload' => true,
	],
	'editpage' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
	],
	'editprotected' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
		'editprotected' => true,
	],
	'editmycssjs' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
		'editmyusercss' => true,
		'editmyuserjson' => true,
		'editmyuserjs' => true,
	],
	'editmyoptions' => [
		'editmyoptions' => true,
		'editmyuserjson' => true,
	],
	'editinterface' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
		'editinterface' => true,
		'edituserjson' => true,
		'editsitejson' => true,
	],
	'editsiteconfig' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
		'editinterface' => true,
		'edituserjson' => true,
		'editsitejson' => true,
		'editusercss' => true,
		'edituserjs' => true,
		'editsitecss' => true,
		'editsitejs' => true,
	],
	'createeditmovepage' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
		'createpage' => true,
		'createtalk' => true,
		'delete-redirect' => true,
		'move' => true,
		'move-rootuserpages' => true,
		'move-subpages' => true,
		'move-categorypages' => true,
		'suppressredirect' => true,
	],
	'uploadfile' => [
		'upload' => true,
		'reupload-own' => true,
	],
	'uploadeditmovefile' => [
		'upload' => true,
		'reupload-own' => true,
		'reupload' => true,
		'reupload-shared' => true,
		'upload_by_url' => true,
		'movefile' => true,
		'suppressredirect' => true,
	],
	'patrol' => [
		'patrol' => true,
	],
	'rollback' => [
		'rollback' => true,
	],
	'blockusers' => [
		'block' => true,
		'blockemail' => true,
	],
	'viewdeleted' => [
		'browsearchive' => true,
		'deletedhistory' => true,
		'deletedtext' => true,
	],
	'viewrestrictedlogs' => [
		'suppressionlog' => true,
	],
	'delete' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
		'browsearchive' => true,
		'deletedhistory' => true,
		'deletedtext' => true,
		'delete' => true,
		'bigdelete' => true,
		'deletelogentry' => true,
		'deleterevision' => true,
		'undelete' => true,
	],
	'oversight' => [
		'suppressrevision' => true,
		'viewsuppressed' => true,
	],
	'protect' => [
		'edit' => true,
		'minoredit' => true,
		'applychangetags' => true,
		'changetags' => true,
		'editcontentmodel' => true,
		'editprotected' => true,
		'protect' => true,
	],
	'viewmywatchlist' => [
		'viewmywatchlist' => true,
	],
	'editmywatchlist' => [
		'editmywatchlist' => true,
	],
	'sendemail' => [
		'sendemail' => true,
	],
	'createaccount' => [
		'createaccount' => true,
	],
	'privateinfo' => [
		'viewmyprivateinfo' => true,
	],
	'mergehistory' => [
		'mergehistory' => true,
	],
];

/**
 * Variable for the GrantPermissionGroups setting, for use in LocalSettings.php
 * @see MainConfigSchema::GrantPermissionGroups
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGrantPermissionGroups = [
	'basic' => 'hidden',
	'editpage' => 'page-interaction',
	'createeditmovepage' => 'page-interaction',
	'editprotected' => 'page-interaction',
	'patrol' => 'page-interaction',
	'uploadfile' => 'file-interaction',
	'uploadeditmovefile' => 'file-interaction',
	'sendemail' => 'email',
	'viewmywatchlist' => 'watchlist-interaction',
	'editviewmywatchlist' => 'watchlist-interaction',
	'editmycssjs' => 'customization',
	'editmyoptions' => 'customization',
	'editinterface' => 'administration',
	'editsiteconfig' => 'administration',
	'rollback' => 'administration',
	'blockusers' => 'administration',
	'delete' => 'administration',
	'viewdeleted' => 'administration',
	'viewrestrictedlogs' => 'administration',
	'protect' => 'administration',
	'oversight' => 'administration',
	'createaccount' => 'administration',
	'mergehistory' => 'administration',
	'import' => 'administration',
	'highvolume' => 'high-volume',
	'privateinfo' => 'private-information',
];

/**
 * Variable for the EnableBotPasswords setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableBotPasswords
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgEnableBotPasswords = true;

/**
 * Variable for the BotPasswordsCluster setting, for use in LocalSettings.php
 * @see MainConfigSchema::BotPasswordsCluster
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|bool
 */
$wgBotPasswordsCluster = false;

/**
 * Variable for the BotPasswordsDatabase setting, for use in LocalSettings.php
 * @see MainConfigSchema::BotPasswordsDatabase
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|bool
 */
$wgBotPasswordsDatabase = false;

/**
 * Variable for the SecretKey setting, for use in LocalSettings.php
 * @see MainConfigSchema::SecretKey
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSecretKey = false;

/**
 * Variable for the AllowUserJs setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowUserJs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowUserJs = false;

/**
 * Variable for the AllowUserCss setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowUserCss
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowUserCss = false;

/**
 * Variable for the AllowUserCssPrefs setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowUserCssPrefs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowUserCssPrefs = true;

/**
 * Variable for the UseSiteJs setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseSiteJs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseSiteJs = true;

/**
 * Variable for the UseSiteCss setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseSiteCss
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseSiteCss = true;

/**
 * Variable for the BreakFrames setting, for use in LocalSettings.php
 * @see MainConfigSchema::BreakFrames
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgBreakFrames = false;

/**
 * Variable for the EditPageFrameOptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::EditPageFrameOptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEditPageFrameOptions = 'DENY';

/**
 * Variable for the ApiFrameOptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::ApiFrameOptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgApiFrameOptions = 'DENY';

/**
 * Variable for the CSPHeader setting, for use in LocalSettings.php
 * @see MainConfigSchema::CSPHeader
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|array
 */
$wgCSPHeader = false;

/**
 * Variable for the CSPReportOnlyHeader setting, for use in LocalSettings.php
 * @see MainConfigSchema::CSPReportOnlyHeader
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|array
 */
$wgCSPReportOnlyHeader = false;

/**
 * Variable for the CSPFalsePositiveUrls setting, for use in LocalSettings.php
 * @see MainConfigSchema::CSPFalsePositiveUrls
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCSPFalsePositiveUrls = [
	'https://3hub.co' => true,
	'https://morepro.info' => true,
	'https://p.ato.mx' => true,
	'https://s.ato.mx' => true,
	'https://adserver.adtech.de' => true,
	'https://ums.adtechus.com' => true,
	'https://cas.criteo.com' => true,
	'https://cat.nl.eu.criteo.com' => true,
	'https://atpixel.alephd.com' => true,
	'https://rtb.metrigo.com' => true,
	'https://d5p.de17a.com' => true,
	'https://ad.lkqd.net/vpaid/vpaid.js' => true,
	'https://ad.lkqd.net/vpaid/vpaid.js?fusion=1.0' => true,
	'https://t.lkqd.net/t' => true,
	'chrome-extension' => true,
];

/**
 * Variable for the AllowCrossOrigin setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowCrossOrigin
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgAllowCrossOrigin = false;

/**
 * Variable for the RestAllowCrossOriginCookieAuth setting, for use in LocalSettings.php
 * @see MainConfigSchema::RestAllowCrossOriginCookieAuth
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgRestAllowCrossOriginCookieAuth = false;

/**
 * Variable for the SessionSecret setting, for use in LocalSettings.php
 * @see MainConfigSchema::SessionSecret
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSessionSecret = false;

/**
 * Variable for the SessionInsecureSecrets setting, for use in LocalSettings.php
 * @see MainConfigSchema::SessionInsecureSecrets
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSessionInsecureSecrets = false;

/**
 * Variable for the HKDFSecret setting, for use in LocalSettings.php
 * @see MainConfigSchema::HKDFSecret
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHKDFSecret = false;

/**
 * Variable for the HKDFAlgorithm setting, for use in LocalSettings.php
 * @see MainConfigSchema::HKDFAlgorithm
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHKDFAlgorithm = 'sha256';

/**
 * Variable for the CookieExpiration setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookieExpiration
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookieExpiration = 2592000;

/**
 * Variable for the ExtendedLoginCookieExpiration setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtendedLoginCookieExpiration
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExtendedLoginCookieExpiration = 15552000;

/**
 * Variable for the CookieDomain setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookieDomain
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookieDomain = '';

/**
 * Variable for the CookiePath setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookiePath
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookiePath = '/';

/**
 * Variable for the CookieSecure setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookieSecure
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookieSecure = 'detect';

/**
 * Variable for the DisableCookieCheck setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableCookieCheck
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableCookieCheck = false;

/**
 * Variable for the CookiePrefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookiePrefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookiePrefix = false;

/**
 * Variable for the CookieHttpOnly setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookieHttpOnly
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookieHttpOnly = true;

/**
 * Variable for the CookieSameSite setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookieSameSite
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgCookieSameSite = null;

/**
 * Variable for the UseSameSiteLegacyCookies setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseSameSiteLegacyCookies
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgUseSameSiteLegacyCookies = false;

/**
 * Variable for the CacheVaryCookies setting, for use in LocalSettings.php
 * @see MainConfigSchema::CacheVaryCookies
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCacheVaryCookies = [
];

/**
 * Variable for the SessionName setting, for use in LocalSettings.php
 * @see MainConfigSchema::SessionName
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSessionName = false;

/**
 * Variable for the CookieSetOnAutoblock setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookieSetOnAutoblock
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookieSetOnAutoblock = true;

/**
 * Variable for the CookieSetOnIpBlock setting, for use in LocalSettings.php
 * @see MainConfigSchema::CookieSetOnIpBlock
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCookieSetOnIpBlock = true;

/**
 * Variable for the DebugLogFile setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugLogFile
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugLogFile = '';

/**
 * Variable for the DebugLogPrefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugLogPrefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugLogPrefix = '';

/**
 * Variable for the DebugRedirects setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugRedirects
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugRedirects = false;

/**
 * Variable for the DebugRawPage setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugRawPage
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugRawPage = false;

/**
 * Variable for the DebugComments setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugComments
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugComments = false;

/**
 * Variable for the DebugDumpSql setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugDumpSql
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugDumpSql = false;

/**
 * Variable for the TrxProfilerLimits setting, for use in LocalSettings.php
 * @see MainConfigSchema::TrxProfilerLimits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgTrxProfilerLimits = [
	'GET' => [
		'masterConns' => 0,
		'writes' => 0,
		'readQueryTime' => 5,
		'readQueryRows' => 10000,
	],
	'POST' => [
		'readQueryTime' => 5,
		'writeQueryTime' => 1,
		'readQueryRows' => 100000,
		'maxAffected' => 1000,
	],
	'POST-nonwrite' => [
		'writes' => 0,
		'readQueryTime' => 5,
		'readQueryRows' => 10000,
	],
	'PostSend-GET' => [
		'readQueryTime' => 5,
		'writeQueryTime' => 1,
		'readQueryRows' => 10000,
		'maxAffected' => 1000,
		'masterConns' => 0,
		'writes' => 0,
	],
	'PostSend-POST' => [
		'readQueryTime' => 5,
		'writeQueryTime' => 1,
		'readQueryRows' => 100000,
		'maxAffected' => 1000,
	],
	'JobRunner' => [
		'readQueryTime' => 30,
		'writeQueryTime' => 5,
		'readQueryRows' => 100000,
		'maxAffected' => 500,
	],
	'Maintenance' => [
		'writeQueryTime' => 5,
		'maxAffected' => 1000,
	],
];

/**
 * Variable for the DebugLogGroups setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugLogGroups
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgDebugLogGroups = [
];

/**
 * Variable for the MWLoggerDefaultSpi setting, for use in LocalSettings.php
 * @see MainConfigSchema::MWLoggerDefaultSpi
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgMWLoggerDefaultSpi = [
	'class' => 'MediaWiki\\Logger\\LegacySpi',
];

/**
 * Variable for the ShowDebug setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowDebug
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowDebug = false;

/**
 * Variable for the SpecialVersionShowHooks setting, for use in LocalSettings.php
 * @see MainConfigSchema::SpecialVersionShowHooks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSpecialVersionShowHooks = false;

/**
 * Variable for the ShowExceptionDetails setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowExceptionDetails
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowExceptionDetails = false;

/**
 * Variable for the LogExceptionBacktrace setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogExceptionBacktrace
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgLogExceptionBacktrace = true;

/**
 * Variable for the PropagateErrors setting, for use in LocalSettings.php
 * @see MainConfigSchema::PropagateErrors
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPropagateErrors = true;

/**
 * Variable for the ShowHostnames setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowHostnames
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowHostnames = false;

/**
 * Variable for the OverrideHostname setting, for use in LocalSettings.php
 * @see MainConfigSchema::OverrideHostname
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgOverrideHostname = false;

/**
 * Variable for the DevelopmentWarnings setting, for use in LocalSettings.php
 * @see MainConfigSchema::DevelopmentWarnings
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDevelopmentWarnings = false;

/**
 * Variable for the DeprecationReleaseLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::DeprecationReleaseLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDeprecationReleaseLimit = false;

/**
 * Variable for the Profiler setting, for use in LocalSettings.php
 * @see MainConfigSchema::Profiler
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgProfiler = [
];

/**
 * Variable for the StatsdServer setting, for use in LocalSettings.php
 * @see MainConfigSchema::StatsdServer
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgStatsdServer = false;

/**
 * Variable for the StatsdMetricPrefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::StatsdMetricPrefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgStatsdMetricPrefix = 'MediaWiki';

/**
 * Variable for the StatsdSamplingRates setting, for use in LocalSettings.php
 * @see MainConfigSchema::StatsdSamplingRates
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgStatsdSamplingRates = [
];

/**
 * Variable for the MetricsTarget setting, for use in LocalSettings.php
 * @see MainConfigSchema::MetricsTarget
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgMetricsTarget = null;

/**
 * Variable for the MetricsFormat setting, for use in LocalSettings.php
 * @see MainConfigSchema::MetricsFormat
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgMetricsFormat = null;

/**
 * Variable for the MetricsPrefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::MetricsPrefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string
 */
$wgMetricsPrefix = 'mediawiki';

/**
 * Variable for the PageInfoTransclusionLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::PageInfoTransclusionLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPageInfoTransclusionLimit = 50;

/**
 * Variable for the ParserTestFiles setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParserTestFiles
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.30
 * @var array
 */
$wgParserTestFiles = [
];

/**
 * Variable for the EnableJavaScriptTest setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableJavaScriptTest
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableJavaScriptTest = false;

/**
 * Variable for the CachePrefix setting, for use in LocalSettings.php
 * @see MainConfigSchema::CachePrefix
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCachePrefix = false;

/**
 * Variable for the DebugToolbar setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugToolbar
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugToolbar = false;

/**
 * Variable for the DisableTextSearch setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableTextSearch
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableTextSearch = false;

/**
 * Variable for the AdvancedSearchHighlighting setting, for use in LocalSettings.php
 * @see MainConfigSchema::AdvancedSearchHighlighting
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAdvancedSearchHighlighting = false;

/**
 * Variable for the SearchHighlightBoundaries setting, for use in LocalSettings.php
 * @see MainConfigSchema::SearchHighlightBoundaries
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSearchHighlightBoundaries = '[\\p{Z}\\p{P}\\p{C}]';

/**
 * Variable for the OpenSearchTemplate setting, for use in LocalSettings.php
 * @see MainConfigSchema::OpenSearchTemplate
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.25 Use $wgOpenSearchTemplates['application/x-suggestions+json']
 *    instead
 */
$wgOpenSearchTemplate = false;

/**
 * Variable for the OpenSearchTemplates setting, for use in LocalSettings.php
 * @see MainConfigSchema::OpenSearchTemplates
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgOpenSearchTemplates = [
	'application/x-suggestions+json' => false,
	'application/x-suggestions+xml' => false,
];

/**
 * Variable for the EnableOpenSearchSuggest setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableOpenSearchSuggest
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.35 No longer used
 */
$wgEnableOpenSearchSuggest = true;

/**
 * Variable for the OpenSearchDefaultLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::OpenSearchDefaultLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgOpenSearchDefaultLimit = 10;

/**
 * Variable for the OpenSearchDescriptionLength setting, for use in LocalSettings.php
 * @see MainConfigSchema::OpenSearchDescriptionLength
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgOpenSearchDescriptionLength = 100;

/**
 * Variable for the SearchSuggestCacheExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::SearchSuggestCacheExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSearchSuggestCacheExpiry = 1200;

/**
 * Variable for the DisableSearchUpdate setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableSearchUpdate
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableSearchUpdate = false;

/**
 * Variable for the NamespacesToBeSearchedDefault setting, for use in LocalSettings.php
 * @see MainConfigSchema::NamespacesToBeSearchedDefault
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNamespacesToBeSearchedDefault = [
	0 => true,
];

/**
 * Variable for the DisableInternalSearch setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableInternalSearch
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableInternalSearch = false;

/**
 * Variable for the SearchForwardUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::SearchForwardUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgSearchForwardUrl = null;

/**
 * Variable for the SitemapNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::SitemapNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|array
 */
$wgSitemapNamespaces = false;

/**
 * Variable for the SitemapNamespacesPriorities setting, for use in LocalSettings.php
 * @see MainConfigSchema::SitemapNamespacesPriorities
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool|array
 */
$wgSitemapNamespacesPriorities = false;

/**
 * Variable for the EnableSearchContributorsByIP setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableSearchContributorsByIP
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableSearchContributorsByIP = true;

/**
 * Variable for the SpecialSearchFormOptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::SpecialSearchFormOptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSpecialSearchFormOptions = [
];

/**
 * Variable for the SearchMatchRedirectPreference setting, for use in LocalSettings.php
 * @see MainConfigSchema::SearchMatchRedirectPreference
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgSearchMatchRedirectPreference = false;

/**
 * Variable for the SearchRunSuggestedQuery setting, for use in LocalSettings.php
 * @see MainConfigSchema::SearchRunSuggestedQuery
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgSearchRunSuggestedQuery = true;

/**
 * Variable for the Diff3 setting, for use in LocalSettings.php
 * @see MainConfigSchema::Diff3
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDiff3 = '/usr/bin/diff3';

/**
 * Variable for the Diff setting, for use in LocalSettings.php
 * @see MainConfigSchema::Diff
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDiff = '/usr/bin/diff';

/**
 * Variable for the PreviewOnOpenNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::PreviewOnOpenNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgPreviewOnOpenNamespaces = [
	14 => true,
];

/**
 * Variable for the UniversalEditButton setting, for use in LocalSettings.php
 * @see MainConfigSchema::UniversalEditButton
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUniversalEditButton = true;

/**
 * Variable for the UseAutomaticEditSummaries setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseAutomaticEditSummaries
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseAutomaticEditSummaries = true;

/**
 * Variable for the CommandLineDarkBg setting, for use in LocalSettings.php
 * @see MainConfigSchema::CommandLineDarkBg
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCommandLineDarkBg = false;

/**
 * Variable for the ReadOnly setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReadOnly
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgReadOnly = null;

/**
 * Variable for the ReadOnlyWatchedItemStore setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReadOnlyWatchedItemStore
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgReadOnlyWatchedItemStore = false;

/**
 * Variable for the ReadOnlyFile setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReadOnlyFile
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgReadOnlyFile = false;

/**
 * Variable for the UpgradeKey setting, for use in LocalSettings.php
 * @see MainConfigSchema::UpgradeKey
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUpgradeKey = false;

/**
 * Variable for the GitBin setting, for use in LocalSettings.php
 * @see MainConfigSchema::GitBin
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgGitBin = '/usr/bin/git';

/**
 * Variable for the GitRepositoryViewers setting, for use in LocalSettings.php
 * @see MainConfigSchema::GitRepositoryViewers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgGitRepositoryViewers = [
	'https://(?:[a-z0-9_]+@)?gerrit.wikimedia.org/r/(?:p/)?(.*)' => 'https://gerrit.wikimedia.org/g/%R/+/%H',
	'ssh://(?:[a-z0-9_]+@)?gerrit.wikimedia.org:29418/(.*)' => 'https://gerrit.wikimedia.org/g/%R/+/%H',
];

/**
 * Variable for the RCMaxAge setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCMaxAge
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRCMaxAge = 7776000;

/**
 * Variable for the WatchersMaxAge setting, for use in LocalSettings.php
 * @see MainConfigSchema::WatchersMaxAge
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgWatchersMaxAge = 15552000;

/**
 * Variable for the UnwatchedPageSecret setting, for use in LocalSettings.php
 * @see MainConfigSchema::UnwatchedPageSecret
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUnwatchedPageSecret = 1;

/**
 * Variable for the RCFilterByAge setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCFilterByAge
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRCFilterByAge = false;

/**
 * Variable for the RCLinkLimits setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCLinkLimits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRCLinkLimits = [
	0 => 50,
	1 => 100,
	2 => 250,
	3 => 500,
];

/**
 * Variable for the RCLinkDays setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCLinkDays
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRCLinkDays = [
	0 => 1,
	1 => 3,
	2 => 7,
	3 => 14,
	4 => 30,
];

/**
 * Variable for the RCFeeds setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCFeeds
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRCFeeds = [
];

/**
 * Variable for the RCEngines setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCEngines
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRCEngines = [
	'redis' => 'RedisPubSubFeedEngine',
	'udp' => 'UDPRCFeedEngine',
];

/**
 * Variable for the RCWatchCategoryMembership setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCWatchCategoryMembership
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRCWatchCategoryMembership = false;

/**
 * Variable for the UseRCPatrol setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseRCPatrol
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseRCPatrol = true;

/**
 * Variable for the StructuredChangeFiltersLiveUpdatePollingRate setting, for use in LocalSettings.php
 * @see MainConfigSchema::StructuredChangeFiltersLiveUpdatePollingRate
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgStructuredChangeFiltersLiveUpdatePollingRate = 3;

/**
 * Variable for the UseNPPatrol setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseNPPatrol
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseNPPatrol = true;

/**
 * Variable for the UseFilePatrol setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseFilePatrol
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseFilePatrol = true;

/**
 * Variable for the Feed setting, for use in LocalSettings.php
 * @see MainConfigSchema::Feed
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFeed = true;

/**
 * Variable for the FeedLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::FeedLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFeedLimit = 50;

/**
 * Variable for the FeedCacheTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::FeedCacheTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFeedCacheTimeout = 60;

/**
 * Variable for the FeedDiffCutoff setting, for use in LocalSettings.php
 * @see MainConfigSchema::FeedDiffCutoff
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgFeedDiffCutoff = 32768;

/**
 * Variable for the OverrideSiteFeed setting, for use in LocalSettings.php
 * @see MainConfigSchema::OverrideSiteFeed
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgOverrideSiteFeed = [
];

/**
 * Variable for the FeedClasses setting, for use in LocalSettings.php
 * @see MainConfigSchema::FeedClasses
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgFeedClasses = [
	'rss' => 'RSSFeed',
	'atom' => 'AtomFeed',
];

/**
 * Variable for the AdvertisedFeedTypes setting, for use in LocalSettings.php
 * @see MainConfigSchema::AdvertisedFeedTypes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAdvertisedFeedTypes = [
	0 => 'atom',
];

/**
 * Variable for the RCShowWatchingUsers setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCShowWatchingUsers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRCShowWatchingUsers = false;

/**
 * Variable for the RCShowChangedSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCShowChangedSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRCShowChangedSize = true;

/**
 * Variable for the RCChangedSizeThreshold setting, for use in LocalSettings.php
 * @see MainConfigSchema::RCChangedSizeThreshold
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRCChangedSizeThreshold = 500;

/**
 * Variable for the ShowUpdatedMarker setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowUpdatedMarker
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowUpdatedMarker = true;

/**
 * Variable for the DisableAnonTalk setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableAnonTalk
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableAnonTalk = false;

/**
 * Variable for the UseTagFilter setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseTagFilter
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseTagFilter = true;

/**
 * Variable for the SoftwareTags setting, for use in LocalSettings.php
 * @see MainConfigSchema::SoftwareTags
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSoftwareTags = [
	'mw-contentmodelchange' => true,
	'mw-new-redirect' => true,
	'mw-removed-redirect' => true,
	'mw-changed-redirect-target' => true,
	'mw-blank' => true,
	'mw-replace' => true,
	'mw-rollback' => true,
	'mw-undo' => true,
	'mw-manual-revert' => true,
	'mw-reverted' => true,
	'mw-server-side-upload' => true,
];

/**
 * Variable for the UnwatchedPageThreshold setting, for use in LocalSettings.php
 * @see MainConfigSchema::UnwatchedPageThreshold
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUnwatchedPageThreshold = false;

/**
 * Variable for the RecentChangesFlags setting, for use in LocalSettings.php
 * @see MainConfigSchema::RecentChangesFlags
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRecentChangesFlags = [
	'newpage' => [
		'letter' => 'newpageletter',
		'title' => 'recentchanges-label-newpage',
		'legend' => 'recentchanges-legend-newpage',
		'grouping' => 'any',
	],
	'minor' => [
		'letter' => 'minoreditletter',
		'title' => 'recentchanges-label-minor',
		'legend' => 'recentchanges-legend-minor',
		'class' => 'minoredit',
		'grouping' => 'all',
	],
	'bot' => [
		'letter' => 'boteditletter',
		'title' => 'recentchanges-label-bot',
		'legend' => 'recentchanges-legend-bot',
		'class' => 'botedit',
		'grouping' => 'all',
	],
	'unpatrolled' => [
		'letter' => 'unpatrolledletter',
		'title' => 'recentchanges-label-unpatrolled',
		'legend' => 'recentchanges-legend-unpatrolled',
		'grouping' => 'any',
	],
];

/**
 * Variable for the WatchlistExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::WatchlistExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgWatchlistExpiry = false;

/**
 * Variable for the WatchlistPurgeRate setting, for use in LocalSettings.php
 * @see MainConfigSchema::WatchlistPurgeRate
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float
 */
$wgWatchlistPurgeRate = 0.1;

/**
 * Variable for the WatchlistExpiryMaxDuration setting, for use in LocalSettings.php
 * @see MainConfigSchema::WatchlistExpiryMaxDuration
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgWatchlistExpiryMaxDuration = '6 months';

/**
 * Variable for the RightsPage setting, for use in LocalSettings.php
 * @see MainConfigSchema::RightsPage
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRightsPage = null;

/**
 * Variable for the RightsUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::RightsUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRightsUrl = null;

/**
 * Variable for the RightsText setting, for use in LocalSettings.php
 * @see MainConfigSchema::RightsText
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRightsText = null;

/**
 * Variable for the RightsIcon setting, for use in LocalSettings.php
 * @see MainConfigSchema::RightsIcon
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRightsIcon = null;

/**
 * Variable for the UseCopyrightUpload setting, for use in LocalSettings.php
 * @see MainConfigSchema::UseCopyrightUpload
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUseCopyrightUpload = false;

/**
 * Variable for the MaxCredits setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxCredits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxCredits = 0;

/**
 * Variable for the ShowCreditsIfMax setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShowCreditsIfMax
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShowCreditsIfMax = true;

/**
 * Variable for the ImportSources setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImportSources
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgImportSources = [
];

/**
 * Variable for the ImportTargetNamespace setting, for use in LocalSettings.php
 * @see MainConfigSchema::ImportTargetNamespace
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgImportTargetNamespace = null;

/**
 * Variable for the ExportAllowHistory setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExportAllowHistory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExportAllowHistory = true;

/**
 * Variable for the ExportMaxHistory setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExportMaxHistory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExportMaxHistory = 0;

/**
 * Variable for the ExportAllowListContributors setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExportAllowListContributors
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExportAllowListContributors = false;

/**
 * Variable for the ExportMaxLinkDepth setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExportMaxLinkDepth
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExportMaxLinkDepth = 0;

/**
 * Variable for the ExportFromNamespaces setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExportFromNamespaces
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExportFromNamespaces = false;

/**
 * Variable for the ExportAllowAll setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExportAllowAll
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExportAllowAll = false;

/**
 * Variable for the ExportPagelistLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExportPagelistLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgExportPagelistLimit = 5000;

/**
 * Variable for the XmlDumpSchemaVersion setting, for use in LocalSettings.php
 * @see MainConfigSchema::XmlDumpSchemaVersion
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgXmlDumpSchemaVersion = '0.11';

/**
 * Variable for the WikiFarmSettingsDirectory setting, for use in LocalSettings.php
 * @see MainConfigSchema::WikiFarmSettingsDirectory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgWikiFarmSettingsDirectory = null;

/**
 * Variable for the WikiFarmSettingsExtension setting, for use in LocalSettings.php
 * @see MainConfigSchema::WikiFarmSettingsExtension
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgWikiFarmSettingsExtension = 'yaml';

/**
 * Variable for the ExtensionFunctions setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtensionFunctions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtensionFunctions = [
];

/**
 * Variable for the ExtensionMessagesFiles setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtensionMessagesFiles
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtensionMessagesFiles = [
];

/**
 * Variable for the MessagesDirs setting, for use in LocalSettings.php
 * @see MainConfigSchema::MessagesDirs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgMessagesDirs = [
];

/**
 * Variable for the ExtensionEntryPointListFiles setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtensionEntryPointListFiles
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtensionEntryPointListFiles = [
];

/**
 * Variable for the ParserOutputHooks setting, for use in LocalSettings.php
 * @see MainConfigSchema::ParserOutputHooks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgParserOutputHooks = [
];

/**
 * Variable for the EnableParserLimitReporting setting, for use in LocalSettings.php
 * @see MainConfigSchema::EnableParserLimitReporting
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgEnableParserLimitReporting = true;

/**
 * Variable for the ValidSkinNames setting, for use in LocalSettings.php
 * @see MainConfigSchema::ValidSkinNames
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgValidSkinNames = [
];

/**
 * Variable for the SpecialPages setting, for use in LocalSettings.php
 * @see MainConfigSchema::SpecialPages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSpecialPages = [
];

/**
 * Variable for the AutoloadAttemptLowercase setting, for use in LocalSettings.php
 * @see MainConfigSchema::AutoloadAttemptLowercase
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.35
 */
$wgAutoloadAttemptLowercase = false;

/**
 * Variable for the ExtensionCredits setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExtensionCredits
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgExtensionCredits = [
];

/**
 * Variable for the Hooks setting, for use in LocalSettings.php
 * @see MainConfigSchema::Hooks
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgHooks = [
];

/**
 * Variable for the ServiceWiringFiles setting, for use in LocalSettings.php
 * @see MainConfigSchema::ServiceWiringFiles
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgServiceWiringFiles = [
];

/**
 * Variable for the JobClasses setting, for use in LocalSettings.php
 * @see MainConfigSchema::JobClasses
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgJobClasses = [
	'deletePage' => 'DeletePageJob',
	'refreshLinks' => 'RefreshLinksJob',
	'deleteLinks' => 'DeleteLinksJob',
	'htmlCacheUpdate' => 'HTMLCacheUpdateJob',
	'sendMail' => 'EmaillingJob',
	'enotifNotify' => 'EnotifNotifyJob',
	'fixDoubleRedirect' => 'DoubleRedirectJob',
	'AssembleUploadChunks' => 'AssembleUploadChunksJob',
	'PublishStashedFile' => 'PublishStashedFileJob',
	'ThumbnailRender' => 'ThumbnailRenderJob',
	'recentChangesUpdate' => 'RecentChangesUpdateJob',
	'refreshLinksPrioritized' => 'RefreshLinksJob',
	'refreshLinksDynamic' => 'RefreshLinksJob',
	'activityUpdateJob' => 'ActivityUpdateJob',
	'categoryMembershipChange' => 'CategoryMembershipChangeJob',
	'clearUserWatchlist' => 'ClearUserWatchlistJob',
	'watchlistExpiry' => 'WatchlistExpiryJob',
	'cdnPurge' => 'CdnPurgeJob',
	'userGroupExpiry' => 'UserGroupExpiryJob',
	'clearWatchlistNotifications' => 'ClearWatchlistNotificationsJob',
	'userOptionsUpdate' => 'UserOptionsUpdateJob',
	'revertedTagUpdate' => 'RevertedTagUpdateJob',
	'enqueue' => 'EnqueueJob',
	'null' => 'NullJob',
	'userEditCountInit' => 'UserEditCountInitJob',
];

/**
 * Variable for the JobTypesExcludedFromDefaultQueue setting, for use in LocalSettings.php
 * @see MainConfigSchema::JobTypesExcludedFromDefaultQueue
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgJobTypesExcludedFromDefaultQueue = [
	0 => 'AssembleUploadChunks',
	1 => 'PublishStashedFile',
];

/**
 * Variable for the JobBackoffThrottling setting, for use in LocalSettings.php
 * @see MainConfigSchema::JobBackoffThrottling
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgJobBackoffThrottling = [
];

/**
 * Variable for the JobSerialCommitThreshold setting, for use in LocalSettings.php
 * @see MainConfigSchema::JobSerialCommitThreshold
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float|bool
 */
$wgJobSerialCommitThreshold = false;

/**
 * Variable for the JobTypeConf setting, for use in LocalSettings.php
 * @see MainConfigSchema::JobTypeConf
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgJobTypeConf = [
	'default' => [
		'class' => 'JobQueueDB',
		'order' => 'random',
		'claimTTL' => 3600,
	],
];

/**
 * Variable for the JobQueueIncludeInMaxLagFactor setting, for use in LocalSettings.php
 * @see MainConfigSchema::JobQueueIncludeInMaxLagFactor
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgJobQueueIncludeInMaxLagFactor = false;

/**
 * Variable for the SpecialPageCacheUpdates setting, for use in LocalSettings.php
 * @see MainConfigSchema::SpecialPageCacheUpdates
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSpecialPageCacheUpdates = [
	'Statistics' => [
		0 => 'SiteStatsUpdate',
		1 => 'cacheUpdate',
	],
];

/**
 * Variable for the PagePropLinkInvalidations setting, for use in LocalSettings.php
 * @see MainConfigSchema::PagePropLinkInvalidations
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgPagePropLinkInvalidations = [
	'hiddencat' => 'categorylinks',
];

/**
 * Variable for the CategoryMagicGallery setting, for use in LocalSettings.php
 * @see MainConfigSchema::CategoryMagicGallery
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCategoryMagicGallery = true;

/**
 * Variable for the CategoryPagingLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::CategoryPagingLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCategoryPagingLimit = 200;

/**
 * Variable for the CategoryCollation setting, for use in LocalSettings.php
 * @see MainConfigSchema::CategoryCollation
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCategoryCollation = 'uppercase';

/**
 * Variable for the TempCategoryCollations setting, for use in LocalSettings.php
 * @see MainConfigSchema::TempCategoryCollations
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgTempCategoryCollations = [
];

/**
 * Variable for the TrackingCategories setting, for use in LocalSettings.php
 * @see MainConfigSchema::TrackingCategories
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.25 Extensions should now register tracking categories using the new
 *    extension registration system.
 * @var array
 */
$wgTrackingCategories = [
];

/**
 * Variable for the LogTypes setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogTypes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLogTypes = [
	0 => '',
	1 => 'block',
	2 => 'protect',
	3 => 'rights',
	4 => 'delete',
	5 => 'upload',
	6 => 'move',
	7 => 'import',
	8 => 'patrol',
	9 => 'merge',
	10 => 'suppress',
	11 => 'tag',
	12 => 'managetags',
	13 => 'contentmodel',
];

/**
 * Variable for the LogRestrictions setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogRestrictions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLogRestrictions = [
	'suppress' => 'suppressionlog',
];

/**
 * Variable for the FilterLogTypes setting, for use in LocalSettings.php
 * @see MainConfigSchema::FilterLogTypes
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgFilterLogTypes = [
	'patrol' => true,
	'tag' => true,
	'newusers' => false,
];

/**
 * Variable for the LogNames setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogNames
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLogNames = [
	'' => 'all-logs-page',
	'block' => 'blocklogpage',
	'protect' => 'protectlogpage',
	'rights' => 'rightslog',
	'delete' => 'dellogpage',
	'upload' => 'uploadlogpage',
	'move' => 'movelogpage',
	'import' => 'importlogpage',
	'patrol' => 'patrol-log-page',
	'merge' => 'mergelog',
	'suppress' => 'suppressionlog',
];

/**
 * Variable for the LogHeaders setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogHeaders
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLogHeaders = [
	'' => 'alllogstext',
	'block' => 'blocklogtext',
	'delete' => 'dellogpagetext',
	'import' => 'importlogpagetext',
	'merge' => 'mergelogpagetext',
	'move' => 'movelogpagetext',
	'patrol' => 'patrol-log-header',
	'protect' => 'protectlogtext',
	'rights' => 'rightslogtext',
	'suppress' => 'suppressionlogtext',
	'upload' => 'uploadlogpagetext',
];

/**
 * Variable for the LogActions setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogActions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLogActions = [
];

/**
 * Variable for the LogActionsHandlers setting, for use in LocalSettings.php
 * @see MainConfigSchema::LogActionsHandlers
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLogActionsHandlers = [
	'block/block' => 'BlockLogFormatter',
	'block/reblock' => 'BlockLogFormatter',
	'block/unblock' => 'BlockLogFormatter',
	'contentmodel/change' => 'ContentModelLogFormatter',
	'contentmodel/new' => 'ContentModelLogFormatter',
	'delete/delete' => 'DeleteLogFormatter',
	'delete/delete_redir' => 'DeleteLogFormatter',
	'delete/delete_redir2' => 'DeleteLogFormatter',
	'delete/event' => 'DeleteLogFormatter',
	'delete/restore' => 'DeleteLogFormatter',
	'delete/revision' => 'DeleteLogFormatter',
	'import/interwiki' => 'ImportLogFormatter',
	'import/upload' => 'ImportLogFormatter',
	'managetags/activate' => 'LogFormatter',
	'managetags/create' => 'LogFormatter',
	'managetags/deactivate' => 'LogFormatter',
	'managetags/delete' => 'LogFormatter',
	'merge/merge' => 'MergeLogFormatter',
	'move/move' => 'MoveLogFormatter',
	'move/move_redir' => 'MoveLogFormatter',
	'patrol/patrol' => 'PatrolLogFormatter',
	'patrol/autopatrol' => 'PatrolLogFormatter',
	'protect/modify' => 'ProtectLogFormatter',
	'protect/move_prot' => 'ProtectLogFormatter',
	'protect/protect' => 'ProtectLogFormatter',
	'protect/unprotect' => 'ProtectLogFormatter',
	'rights/autopromote' => 'RightsLogFormatter',
	'rights/rights' => 'RightsLogFormatter',
	'suppress/block' => 'BlockLogFormatter',
	'suppress/delete' => 'DeleteLogFormatter',
	'suppress/event' => 'DeleteLogFormatter',
	'suppress/reblock' => 'BlockLogFormatter',
	'suppress/revision' => 'DeleteLogFormatter',
	'tag/update' => 'TagLogFormatter',
	'upload/overwrite' => 'UploadLogFormatter',
	'upload/revert' => 'UploadLogFormatter',
	'upload/upload' => 'UploadLogFormatter',
];

/**
 * Variable for the ActionFilteredLogs setting, for use in LocalSettings.php
 * @see MainConfigSchema::ActionFilteredLogs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgActionFilteredLogs = [
	'block' => [
		'block' => [
			0 => 'block',
		],
		'reblock' => [
			0 => 'reblock',
		],
		'unblock' => [
			0 => 'unblock',
		],
	],
	'contentmodel' => [
		'change' => [
			0 => 'change',
		],
		'new' => [
			0 => 'new',
		],
	],
	'delete' => [
		'delete' => [
			0 => 'delete',
		],
		'delete_redir' => [
			0 => 'delete_redir',
			1 => 'delete_redir2',
		],
		'restore' => [
			0 => 'restore',
		],
		'event' => [
			0 => 'event',
		],
		'revision' => [
			0 => 'revision',
		],
	],
	'import' => [
		'interwiki' => [
			0 => 'interwiki',
		],
		'upload' => [
			0 => 'upload',
		],
	],
	'managetags' => [
		'create' => [
			0 => 'create',
		],
		'delete' => [
			0 => 'delete',
		],
		'activate' => [
			0 => 'activate',
		],
		'deactivate' => [
			0 => 'deactivate',
		],
	],
	'move' => [
		'move' => [
			0 => 'move',
		],
		'move_redir' => [
			0 => 'move_redir',
		],
	],
	'newusers' => [
		'create' => [
			0 => 'create',
			1 => 'newusers',
		],
		'create2' => [
			0 => 'create2',
		],
		'autocreate' => [
			0 => 'autocreate',
		],
		'byemail' => [
			0 => 'byemail',
		],
	],
	'protect' => [
		'protect' => [
			0 => 'protect',
		],
		'modify' => [
			0 => 'modify',
		],
		'unprotect' => [
			0 => 'unprotect',
		],
		'move_prot' => [
			0 => 'move_prot',
		],
	],
	'rights' => [
		'rights' => [
			0 => 'rights',
		],
		'autopromote' => [
			0 => 'autopromote',
		],
	],
	'suppress' => [
		'event' => [
			0 => 'event',
		],
		'revision' => [
			0 => 'revision',
		],
		'delete' => [
			0 => 'delete',
		],
		'block' => [
			0 => 'block',
		],
		'reblock' => [
			0 => 'reblock',
		],
	],
	'upload' => [
		'upload' => [
			0 => 'upload',
		],
		'overwrite' => [
			0 => 'overwrite',
		],
		'revert' => [
			0 => 'revert',
		],
	],
];

/**
 * Variable for the NewUserLog setting, for use in LocalSettings.php
 * @see MainConfigSchema::NewUserLog
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgNewUserLog = true;

/**
 * Variable for the PageCreationLog setting, for use in LocalSettings.php
 * @see MainConfigSchema::PageCreationLog
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPageCreationLog = true;

/**
 * Variable for the AllowSpecialInclusion setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowSpecialInclusion
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowSpecialInclusion = true;

/**
 * Variable for the DisableQueryPageUpdate setting, for use in LocalSettings.php
 * @see MainConfigSchema::DisableQueryPageUpdate
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDisableQueryPageUpdate = false;

/**
 * Variable for the CountCategorizedImagesAsUsed setting, for use in LocalSettings.php
 * @see MainConfigSchema::CountCategorizedImagesAsUsed
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgCountCategorizedImagesAsUsed = false;

/**
 * Variable for the MaxRedirectLinksRetrieved setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxRedirectLinksRetrieved
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxRedirectLinksRetrieved = 500;

/**
 * Variable for the RangeContributionsCIDRLimit setting, for use in LocalSettings.php
 * @see MainConfigSchema::RangeContributionsCIDRLimit
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRangeContributionsCIDRLimit = [
	'IPv4' => 16,
	'IPv6' => 32,
];

/**
 * Variable for the Actions setting, for use in LocalSettings.php
 * @see MainConfigSchema::Actions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgActions = [
];

/**
 * Variable for the DefaultRobotPolicy setting, for use in LocalSettings.php
 * @see MainConfigSchema::DefaultRobotPolicy
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDefaultRobotPolicy = 'index,follow';

/**
 * Variable for the NamespaceRobotPolicies setting, for use in LocalSettings.php
 * @see MainConfigSchema::NamespaceRobotPolicies
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgNamespaceRobotPolicies = [
];

/**
 * Variable for the ArticleRobotPolicies setting, for use in LocalSettings.php
 * @see MainConfigSchema::ArticleRobotPolicies
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgArticleRobotPolicies = [
];

/**
 * Variable for the ExemptFromUserRobotsControl setting, for use in LocalSettings.php
 * @see MainConfigSchema::ExemptFromUserRobotsControl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?array
 */
$wgExemptFromUserRobotsControl = null;

/**
 * Variable for the DebugAPI setting, for use in LocalSettings.php
 * @see MainConfigSchema::DebugAPI
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgDebugAPI = false;

/**
 * Variable for the APIModules setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIModules
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAPIModules = [
];

/**
 * Variable for the APIFormatModules setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIFormatModules
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAPIFormatModules = [
];

/**
 * Variable for the APIMetaModules setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIMetaModules
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAPIMetaModules = [
];

/**
 * Variable for the APIPropModules setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIPropModules
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAPIPropModules = [
];

/**
 * Variable for the APIListModules setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIListModules
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAPIListModules = [
];

/**
 * Variable for the APIMaxDBRows setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIMaxDBRows
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAPIMaxDBRows = 5000;

/**
 * Variable for the APIMaxResultSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIMaxResultSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAPIMaxResultSize = 8388608;

/**
 * Variable for the APIMaxUncachedDiffs setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIMaxUncachedDiffs
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAPIMaxUncachedDiffs = 1;

/**
 * Variable for the APIMaxLagThreshold setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIMaxLagThreshold
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAPIMaxLagThreshold = 7;

/**
 * Variable for the APIRequestLog setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIRequestLog
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAPIRequestLog = false;

/**
 * Variable for the APICacheHelpTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::APICacheHelpTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAPICacheHelpTimeout = 3600;

/**
 * Variable for the APIUselessQueryPages setting, for use in LocalSettings.php
 * @see MainConfigSchema::APIUselessQueryPages
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAPIUselessQueryPages = [
	0 => 'MIMEsearch',
	1 => 'LinkSearch',
];

/**
 * Variable for the AjaxUploadDestCheck setting, for use in LocalSettings.php
 * @see MainConfigSchema::AjaxUploadDestCheck
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAjaxUploadDestCheck = true;

/**
 * Variable for the AjaxLicensePreview setting, for use in LocalSettings.php
 * @see MainConfigSchema::AjaxLicensePreview
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAjaxLicensePreview = true;

/**
 * Variable for the CrossSiteAJAXdomains setting, for use in LocalSettings.php
 * @see MainConfigSchema::CrossSiteAJAXdomains
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCrossSiteAJAXdomains = [
];

/**
 * Variable for the CrossSiteAJAXdomainExceptions setting, for use in LocalSettings.php
 * @see MainConfigSchema::CrossSiteAJAXdomainExceptions
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgCrossSiteAJAXdomainExceptions = [
];

/**
 * Variable for the AllowedCorsHeaders setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowedCorsHeaders
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgAllowedCorsHeaders = [
	0 => 'Accept',
	1 => 'Accept-Language',
	2 => 'Content-Language',
	3 => 'Content-Type',
	4 => 'Accept-Encoding',
	5 => 'DNT',
	6 => 'Origin',
	7 => 'User-Agent',
	8 => 'Api-User-Agent',
	9 => 'Access-Control-Max-Age',
];

/**
 * Variable for the RestAPIAdditionalRouteFiles setting, for use in LocalSettings.php
 * @see MainConfigSchema::RestAPIAdditionalRouteFiles
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgRestAPIAdditionalRouteFiles = [
];

/**
 * Variable for the MaxShellMemory setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxShellMemory
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxShellMemory = 307200;

/**
 * Variable for the MaxShellFileSize setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxShellFileSize
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxShellFileSize = 102400;

/**
 * Variable for the MaxShellTime setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxShellTime
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxShellTime = 180;

/**
 * Variable for the MaxShellWallClockTime setting, for use in LocalSettings.php
 * @see MainConfigSchema::MaxShellWallClockTime
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgMaxShellWallClockTime = 180;

/**
 * Variable for the ShellCgroup setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShellCgroup
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgShellCgroup = false;

/**
 * Variable for the PhpCli setting, for use in LocalSettings.php
 * @see MainConfigSchema::PhpCli
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgPhpCli = '/usr/bin/php';

/**
 * Variable for the ShellRestrictionMethod setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShellRestrictionMethod
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|bool
 */
$wgShellRestrictionMethod = 'autodetect';

/**
 * Variable for the ShellboxUrl setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShellboxUrl
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @deprecated since 1.37; use $wgShellboxUrls instead
 */
$wgShellboxUrl = null;

/**
 * Variable for the ShellboxUrls setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShellboxUrls
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgShellboxUrls = [
	'default' => null,
];

/**
 * Variable for the ShellboxSecretKey setting, for use in LocalSettings.php
 * @see MainConfigSchema::ShellboxSecretKey
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var ?string
 */
$wgShellboxSecretKey = null;

/**
 * Variable for the HTTPTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTTPTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float
 */
$wgHTTPTimeout = 25;

/**
 * Variable for the HTTPConnectTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTTPConnectTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float
 */
$wgHTTPConnectTimeout = 5.0;

/**
 * Variable for the HTTPMaxTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTTPMaxTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float
 */
$wgHTTPMaxTimeout = 0;

/**
 * Variable for the HTTPMaxConnectTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTTPMaxConnectTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float
 */
$wgHTTPMaxConnectTimeout = 0;

/**
 * Variable for the HTTPImportTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTTPImportTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHTTPImportTimeout = 25;

/**
 * Variable for the AsyncHTTPTimeout setting, for use in LocalSettings.php
 * @see MainConfigSchema::AsyncHTTPTimeout
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAsyncHTTPTimeout = 25;

/**
 * Variable for the HTTPProxy setting, for use in LocalSettings.php
 * @see MainConfigSchema::HTTPProxy
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgHTTPProxy = '';

/**
 * Variable for the LocalVirtualHosts setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalVirtualHosts
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgLocalVirtualHosts = [
];

/**
 * Variable for the LocalHTTPProxy setting, for use in LocalSettings.php
 * @see MainConfigSchema::LocalHTTPProxy
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var string|bool
 */
$wgLocalHTTPProxy = false;

/**
 * Variable for the AllowExternalReqID setting, for use in LocalSettings.php
 * @see MainConfigSchema::AllowExternalReqID
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgAllowExternalReqID = false;

/**
 * Variable for the JobRunRate setting, for use in LocalSettings.php
 * @see MainConfigSchema::JobRunRate
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgJobRunRate = 1;

/**
 * Variable for the RunJobsAsync setting, for use in LocalSettings.php
 * @see MainConfigSchema::RunJobsAsync
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRunJobsAsync = false;

/**
 * Variable for the UpdateRowsPerJob setting, for use in LocalSettings.php
 * @see MainConfigSchema::UpdateRowsPerJob
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUpdateRowsPerJob = 300;

/**
 * Variable for the UpdateRowsPerQuery setting, for use in LocalSettings.php
 * @see MainConfigSchema::UpdateRowsPerQuery
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgUpdateRowsPerQuery = 100;

/**
 * Variable for the RedirectOnLogin setting, for use in LocalSettings.php
 * @see MainConfigSchema::RedirectOnLogin
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 */
$wgRedirectOnLogin = null;

/**
 * Variable for the VirtualRestConfig setting, for use in LocalSettings.php
 * @see MainConfigSchema::VirtualRestConfig
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgVirtualRestConfig = [
	'paths' => [
	],
	'modules' => [
	],
	'global' => [
		'timeout' => 360,
		'forwardCookies' => false,
		'HTTPProxy' => null,
	],
];

/**
 * Variable for the EventRelayerConfig setting, for use in LocalSettings.php
 * @see MainConfigSchema::EventRelayerConfig
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgEventRelayerConfig = [
	'default' => [
		'class' => 'EventRelayerNull',
	],
];

/**
 * Variable for the Pingback setting, for use in LocalSettings.php
 * @see MainConfigSchema::Pingback
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgPingback = false;

/**
 * Variable for the OriginTrials setting, for use in LocalSettings.php
 * @see MainConfigSchema::OriginTrials
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgOriginTrials = [
];

/**
 * Variable for the PriorityHints setting, for use in LocalSettings.php
 * @see MainConfigSchema::PriorityHints
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgPriorityHints = false;

/**
 * Variable for the PriorityHintsRatio setting, for use in LocalSettings.php
 * @see MainConfigSchema::PriorityHintsRatio
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var float
 */
$wgPriorityHintsRatio = 1.0;

/**
 * Variable for the ElementTiming setting, for use in LocalSettings.php
 * @see MainConfigSchema::ElementTiming
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var bool
 */
$wgElementTiming = false;

/**
 * Variable for the ReportToExpiry setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReportToExpiry
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var int
 */
$wgReportToExpiry = 86400;

/**
 * Variable for the ReportToEndpoints setting, for use in LocalSettings.php
 * @see MainConfigSchema::ReportToEndpoints
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgReportToEndpoints = [
];

/**
 * Variable for the FeaturePolicyReportOnly setting, for use in LocalSettings.php
 * @see MainConfigSchema::FeaturePolicyReportOnly
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgFeaturePolicyReportOnly = [
];

/**
 * Variable for the SkinsPreferred setting, for use in LocalSettings.php
 * @see MainConfigSchema::SkinsPreferred
 * @note Do not change manually, generated by maintenance/generateConfigDefaultSettings.php!
 * @var array
 */
$wgSkinsPreferred = [
	0 => 'vector-2022',
	1 => 'vector',
];
